//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PespaSistem {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DsProdukte")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsProdukte : System.Data.DataSet {
        
        private PRODUKTEDataTable tablePRODUKTE;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsProdukte() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsProdukte(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["PRODUKTE"] != null)) {
                    base.Tables.Add(new PRODUKTEDataTable(ds.Tables["PRODUKTE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODUKTEDataTable PRODUKTE {
            get {
                return this.tablePRODUKTE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DsProdukte cln = ((DsProdukte)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PRODUKTE"] != null)) {
                    base.Tables.Add(new PRODUKTEDataTable(ds.Tables["PRODUKTE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePRODUKTE = ((PRODUKTEDataTable)(base.Tables["PRODUKTE"]));
            if ((initTable == true)) {
                if ((this.tablePRODUKTE != null)) {
                    this.tablePRODUKTE.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsProdukte";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsProdukte.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePRODUKTE = new PRODUKTEDataTable();
            base.Tables.Add(this.tablePRODUKTE);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePRODUKTE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DsProdukte ds = new DsProdukte();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void PRODUKTERowChangeEventHandler(object sender, PRODUKTERowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODUKTEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_PRODUKTI;
            
            private System.Data.DataColumn columnEMER_PRODUKTI;
            
            private System.Data.DataColumn columnLLOJ_PRODUKTI;
            
            private System.Data.DataColumn columnID_LLOJ_SISTEMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTEDataTable() {
                this.TableName = "PRODUKTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODUKTEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PRODUKTEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PRODUKTIColumn {
                get {
                    return this.columnID_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_PRODUKTIColumn {
                get {
                    return this.columnEMER_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LLOJ_PRODUKTIColumn {
                get {
                    return this.columnLLOJ_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_LLOJ_SISTEMIColumn {
                get {
                    return this.columnID_LLOJ_SISTEMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTERow this[int index] {
                get {
                    return ((PRODUKTERow)(this.Rows[index]));
                }
            }
            
            public event PRODUKTERowChangeEventHandler PRODUKTERowChanging;
            
            public event PRODUKTERowChangeEventHandler PRODUKTERowChanged;
            
            public event PRODUKTERowChangeEventHandler PRODUKTERowDeleting;
            
            public event PRODUKTERowChangeEventHandler PRODUKTERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPRODUKTERow(PRODUKTERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTERow AddPRODUKTERow(string EMER_PRODUKTI, int LLOJ_PRODUKTI, int ID_LLOJ_SISTEMI) {
                PRODUKTERow rowPRODUKTERow = ((PRODUKTERow)(this.NewRow()));
                rowPRODUKTERow.ItemArray = new object[] {
                        null,
                        EMER_PRODUKTI,
                        LLOJ_PRODUKTI,
                        ID_LLOJ_SISTEMI};
                this.Rows.Add(rowPRODUKTERow);
                return rowPRODUKTERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTERow FindByID_PRODUKTI(int ID_PRODUKTI) {
                return ((PRODUKTERow)(this.Rows.Find(new object[] {
                            ID_PRODUKTI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PRODUKTEDataTable cln = ((PRODUKTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PRODUKTEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_PRODUKTI = base.Columns["ID_PRODUKTI"];
                this.columnEMER_PRODUKTI = base.Columns["EMER_PRODUKTI"];
                this.columnLLOJ_PRODUKTI = base.Columns["LLOJ_PRODUKTI"];
                this.columnID_LLOJ_SISTEMI = base.Columns["ID_LLOJ_SISTEMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_PRODUKTI = new System.Data.DataColumn("ID_PRODUKTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUKTI);
                this.columnEMER_PRODUKTI = new System.Data.DataColumn("EMER_PRODUKTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_PRODUKTI);
                this.columnLLOJ_PRODUKTI = new System.Data.DataColumn("LLOJ_PRODUKTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLOJ_PRODUKTI);
                this.columnID_LLOJ_SISTEMI = new System.Data.DataColumn("ID_LLOJ_SISTEMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_LLOJ_SISTEMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_PRODUKTI}, true));
                this.columnID_PRODUKTI.AutoIncrement = true;
                this.columnID_PRODUKTI.AllowDBNull = false;
                this.columnID_PRODUKTI.Unique = true;
                this.columnEMER_PRODUKTI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTERow NewPRODUKTERow() {
                return ((PRODUKTERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PRODUKTERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PRODUKTERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODUKTERowChanged != null)) {
                    this.PRODUKTERowChanged(this, new PRODUKTERowChangeEvent(((PRODUKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODUKTERowChanging != null)) {
                    this.PRODUKTERowChanging(this, new PRODUKTERowChangeEvent(((PRODUKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODUKTERowDeleted != null)) {
                    this.PRODUKTERowDeleted(this, new PRODUKTERowChangeEvent(((PRODUKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODUKTERowDeleting != null)) {
                    this.PRODUKTERowDeleting(this, new PRODUKTERowChangeEvent(((PRODUKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePRODUKTERow(PRODUKTERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsProdukte ds = new DsProdukte();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODUKTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PRODUKTERow : System.Data.DataRow {
            
            private PRODUKTEDataTable tablePRODUKTE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODUKTERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODUKTE = ((PRODUKTEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PRODUKTI {
                get {
                    return ((int)(this[this.tablePRODUKTE.ID_PRODUKTIColumn]));
                }
                set {
                    this[this.tablePRODUKTE.ID_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_PRODUKTI {
                get {
                    try {
                        return ((string)(this[this.tablePRODUKTE.EMER_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_PRODUKTI\' in table \'PRODUKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKTE.EMER_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LLOJ_PRODUKTI {
                get {
                    try {
                        return ((int)(this[this.tablePRODUKTE.LLOJ_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LLOJ_PRODUKTI\' in table \'PRODUKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKTE.LLOJ_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_LLOJ_SISTEMI {
                get {
                    try {
                        return ((int)(this[this.tablePRODUKTE.ID_LLOJ_SISTEMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_LLOJ_SISTEMI\' in table \'PRODUKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKTE.ID_LLOJ_SISTEMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_PRODUKTINull() {
                return this.IsNull(this.tablePRODUKTE.EMER_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_PRODUKTINull() {
                this[this.tablePRODUKTE.EMER_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLOJ_PRODUKTINull() {
                return this.IsNull(this.tablePRODUKTE.LLOJ_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLOJ_PRODUKTINull() {
                this[this.tablePRODUKTE.LLOJ_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_LLOJ_SISTEMINull() {
                return this.IsNull(this.tablePRODUKTE.ID_LLOJ_SISTEMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_LLOJ_SISTEMINull() {
                this[this.tablePRODUKTE.ID_LLOJ_SISTEMIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PRODUKTERowChangeEvent : System.EventArgs {
            
            private PRODUKTERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTERowChangeEvent(PRODUKTERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PespaSistem.DsProdukteTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRODUKTETableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PRODUKTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRODUKTE";
            tableMapping.ColumnMappings.Add("ID_PRODUKTI", "ID_PRODUKTI");
            tableMapping.ColumnMappings.Add("EMER_PRODUKTI", "EMER_PRODUKTI");
            tableMapping.ColumnMappings.Add("LLOJ_PRODUKTI", "LLOJ_PRODUKTI");
            tableMapping.ColumnMappings.Add("ID_LLOJ_SISTEMI", "ID_LLOJ_SISTEMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `PRODUKTE` WHERE ((`ID_PRODUKTI` = ?) AND ((? = 1 AND `EMER_PRODUKTI`" +
                " IS NULL) OR (`EMER_PRODUKTI` = ?)) AND ((? = 1 AND `LLOJ_PRODUKTI` IS NULL) OR " +
                "(`LLOJ_PRODUKTI` = ?)) AND ((? = 1 AND `ID_LLOJ_SISTEMI` IS NULL) OR (`ID_LLOJ_S" +
                "ISTEMI` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_PRODUKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PRODUKTE` (`EMER_PRODUKTI`, `LLOJ_PRODUKTI`, `ID_LLOJ_SISTEMI`) VALU" +
                "ES (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PRODUKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PRODUKTE` SET `EMER_PRODUKTI` = ?, `LLOJ_PRODUKTI` = ?, `ID_LLOJ_SISTEMI` = ? WHERE ((`ID_PRODUKTI` = ?) AND ((? = 1 AND `EMER_PRODUKTI` IS NULL) OR (`EMER_PRODUKTI` = ?)) AND ((? = 1 AND `LLOJ_PRODUKTI` IS NULL) OR (`LLOJ_PRODUKTI` = ?)) AND ((? = 1 AND `ID_LLOJ_SISTEMI` IS NULL) OR (`ID_LLOJ_SISTEMI` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PRODUKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_PRODUKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[7];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PRODUKTI, EMER_PRODUKTI, LLOJ_PRODUKTI, ID_LLOJ_SISTEMI FROM PRODUKTE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ID_PRODUKTI, EMER_PRODUKTI, LLOJ_PRODUKTI, ID_LLOJ_SISTEMI\r\nFROM      " +
                "   PRODUKTE\r\nWHERE     (ID_PRODUKTI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     ID_PRODUKTI, EMER_PRODUKTI, LLOJ_PRODUKTI, ID_LLOJ_SISTEMI\r\nFROM      " +
                "   PRODUKTE\r\nWHERE     (LLOJ_PRODUKTI = ?)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     EMER_PRODUKTI\r\nFROM         PRODUKTE\r\nWHERE (LLOJ_PRODUKTI = ?)\r\nGROUP" +
                " BY EMER_PRODUKTI";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "INSERT INTO `PRODUKTE` (`EMER_PRODUKTI`, `LLOJ_PRODUKTI`, `ID_LLOJ_SISTEMI`) VALU" +
                "ES (?, ?, ?)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PRODUKTI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("LLOJ_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT     EMER_PRODUKTI\r\nFROM         PRODUKTE\r\nWHERE     (ID_PRODUKTI = ?)";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT     ID_PRODUKTI\r\nFROM         PRODUKTE\r\nWHERE     (EMER_PRODUKTI = ?) AND " +
                "(ID_LLOJ_SISTEMI = ?)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PRODUKTI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_LLOJ_SISTEMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_LLOJ_SISTEMI", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsProdukte.PRODUKTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsProdukte.PRODUKTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsProdukte.PRODUKTEDataTable dataTable = new DsProdukte.PRODUKTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProdukti(DsProdukte.PRODUKTEDataTable dataTable, int ID_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PRODUKTI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsProdukte.PRODUKTEDataTable GetDataByIdProdukti(int ID_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PRODUKTI));
            DsProdukte.PRODUKTEDataTable dataTable = new DsProdukte.PRODUKTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLlojProdukti(DsProdukte.PRODUKTEDataTable dataTable, System.Nullable<int> LLOJ_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsProdukte.PRODUKTEDataTable GetDataByLlojProdukti(System.Nullable<int> LLOJ_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsProdukte.PRODUKTEDataTable dataTable = new DsProdukte.PRODUKTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int GroupByEmerProdukti(DsProdukte.PRODUKTEDataTable dataTable, System.Nullable<int> LLOJ_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsProdukte.PRODUKTEDataTable GetDataByGroupEmerProdukti(System.Nullable<int> LLOJ_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsProdukte.PRODUKTEDataTable dataTable = new DsProdukte.PRODUKTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsProdukte.PRODUKTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsProdukte dataSet) {
            return this.Adapter.Update(dataSet, "PRODUKTE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PRODUKTI, string Original_EMER_PRODUKTI, System.Nullable<int> Original_LLOJ_PRODUKTI, System.Nullable<int> Original_ID_LLOJ_SISTEMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PRODUKTI));
            if ((Original_EMER_PRODUKTI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMER_PRODUKTI));
            }
            if ((Original_LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_ID_LLOJ_SISTEMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_LLOJ_SISTEMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMER_PRODUKTI, System.Nullable<int> LLOJ_PRODUKTI, System.Nullable<int> ID_LLOJ_SISTEMI) {
            if ((EMER_PRODUKTI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMER_PRODUKTI));
            }
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_LLOJ_SISTEMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_LLOJ_SISTEMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMER_PRODUKTI, System.Nullable<int> LLOJ_PRODUKTI, System.Nullable<int> ID_LLOJ_SISTEMI, int Original_ID_PRODUKTI, string Original_EMER_PRODUKTI, System.Nullable<int> Original_LLOJ_PRODUKTI, System.Nullable<int> Original_ID_LLOJ_SISTEMI) {
            if ((EMER_PRODUKTI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMER_PRODUKTI));
            }
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_LLOJ_SISTEMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_LLOJ_SISTEMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_PRODUKTI));
            if ((Original_EMER_PRODUKTI == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_EMER_PRODUKTI));
            }
            if ((Original_LLOJ_PRODUKTI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_LLOJ_PRODUKTI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_ID_LLOJ_SISTEMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_LLOJ_SISTEMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string EMER_PRODUKTI, System.Nullable<int> LLOJ_PRODUKTI, System.Nullable<int> ID_LLOJ_SISTEMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[4];
            if ((EMER_PRODUKTI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_PRODUKTI));
            }
            if ((LLOJ_PRODUKTI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(LLOJ_PRODUKTI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_LLOJ_SISTEMI.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_LLOJ_SISTEMI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryEmerProdukti(int ID_PRODUKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[5];
            command.Parameters[0].Value = ((int)(ID_PRODUKTI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryIdProdukti(string EMER_PRODUKTI, System.Nullable<int> ID_LLOJ_SISTEMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[6];
            if ((EMER_PRODUKTI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_PRODUKTI));
            }
            if ((ID_LLOJ_SISTEMI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_LLOJ_SISTEMI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
}

#pragma warning restore 1591