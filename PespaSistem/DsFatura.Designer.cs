//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PespaSistem {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DsFatura")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsFatura : System.Data.DataSet {
        
        private DtAksesoreDataTable tableDtAksesore;
        
        private DtProdukteDataTable tableDtProdukte;
        
        private System.Data.DataRelation relationDtProdukte_DtAksesore;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsFatura() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsFatura(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["DtAksesore"] != null)) {
                    base.Tables.Add(new DtAksesoreDataTable(ds.Tables["DtAksesore"]));
                }
                if ((ds.Tables["DtProdukte"] != null)) {
                    base.Tables.Add(new DtProdukteDataTable(ds.Tables["DtProdukte"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtAksesoreDataTable DtAksesore {
            get {
                return this.tableDtAksesore;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtProdukteDataTable DtProdukte {
            get {
                return this.tableDtProdukte;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DsFatura cln = ((DsFatura)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DtAksesore"] != null)) {
                    base.Tables.Add(new DtAksesoreDataTable(ds.Tables["DtAksesore"]));
                }
                if ((ds.Tables["DtProdukte"] != null)) {
                    base.Tables.Add(new DtProdukteDataTable(ds.Tables["DtProdukte"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDtAksesore = ((DtAksesoreDataTable)(base.Tables["DtAksesore"]));
            if ((initTable == true)) {
                if ((this.tableDtAksesore != null)) {
                    this.tableDtAksesore.InitVars();
                }
            }
            this.tableDtProdukte = ((DtProdukteDataTable)(base.Tables["DtProdukte"]));
            if ((initTable == true)) {
                if ((this.tableDtProdukte != null)) {
                    this.tableDtProdukte.InitVars();
                }
            }
            this.relationDtProdukte_DtAksesore = this.Relations["DtProdukte_DtAksesore"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsFatura";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsFatura.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDtAksesore = new DtAksesoreDataTable();
            base.Tables.Add(this.tableDtAksesore);
            this.tableDtProdukte = new DtProdukteDataTable();
            base.Tables.Add(this.tableDtProdukte);
            this.relationDtProdukte_DtAksesore = new System.Data.DataRelation("DtProdukte_DtAksesore", new System.Data.DataColumn[] {
                        this.tableDtProdukte.IDDtProduktiColumn}, new System.Data.DataColumn[] {
                        this.tableDtAksesore.IDDtProduktiColumn}, false);
            this.Relations.Add(this.relationDtProdukte_DtAksesore);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtAksesore() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtProdukte() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DsFatura ds = new DsFatura();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void DtAksesoreRowChangeEventHandler(object sender, DtAksesoreRowChangeEvent e);
        
        public delegate void DtProdukteRowChangeEventHandler(object sender, DtProdukteRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtAksesoreDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIDDtAksesore;
            
            private System.Data.DataColumn columnIDDtProdukti;
            
            private System.Data.DataColumn columnID_PRODUKT_AKSESORE;
            
            private System.Data.DataColumn columnID_PRODUKTI;
            
            private System.Data.DataColumn columnID_AKSESORE_ALUMINI;
            
            private System.Data.DataColumn columnID_AKSESORE_XHAMI;
            
            private System.Data.DataColumn columnID_AKSESORE;
            
            private System.Data.DataColumn columnFORMULA;
            
            private System.Data.DataColumn columnKOD_AKSESORI;
            
            private System.Data.DataColumn columnEMER_AKSESORI;
            
            private System.Data.DataColumn columnCMIMI;
            
            private System.Data.DataColumn columnSASIA;
            
            private System.Data.DataColumn columnPESHA_SPECIFIKE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreDataTable() {
                this.TableName = "DtAksesore";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtAksesoreDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtAksesoreDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDDtAksesoreColumn {
                get {
                    return this.columnIDDtAksesore;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDDtProduktiColumn {
                get {
                    return this.columnIDDtProdukti;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PRODUKT_AKSESOREColumn {
                get {
                    return this.columnID_PRODUKT_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PRODUKTIColumn {
                get {
                    return this.columnID_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORE_ALUMINIColumn {
                get {
                    return this.columnID_AKSESORE_ALUMINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORE_XHAMIColumn {
                get {
                    return this.columnID_AKSESORE_XHAMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESOREColumn {
                get {
                    return this.columnID_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FORMULAColumn {
                get {
                    return this.columnFORMULA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOD_AKSESORIColumn {
                get {
                    return this.columnKOD_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_AKSESORIColumn {
                get {
                    return this.columnEMER_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIAColumn {
                get {
                    return this.columnSASIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PESHA_SPECIFIKEColumn {
                get {
                    return this.columnPESHA_SPECIFIKE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRow this[int index] {
                get {
                    return ((DtAksesoreRow)(this.Rows[index]));
                }
            }
            
            public event DtAksesoreRowChangeEventHandler DtAksesoreRowChanging;
            
            public event DtAksesoreRowChangeEventHandler DtAksesoreRowChanged;
            
            public event DtAksesoreRowChangeEventHandler DtAksesoreRowDeleting;
            
            public event DtAksesoreRowChangeEventHandler DtAksesoreRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtAksesoreRow(DtAksesoreRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRow AddDtAksesoreRow(DtProdukteRow parentDtProdukteRowByDtProdukte_DtAksesore, int ID_PRODUKT_AKSESORE, int ID_PRODUKTI, int ID_AKSESORE_ALUMINI, int ID_AKSESORE_XHAMI, int ID_AKSESORE, string FORMULA, string KOD_AKSESORI, string EMER_AKSESORI, decimal CMIMI, decimal SASIA, decimal PESHA_SPECIFIKE) {
                DtAksesoreRow rowDtAksesoreRow = ((DtAksesoreRow)(this.NewRow()));
                rowDtAksesoreRow.ItemArray = new object[] {
                        null,
                        parentDtProdukteRowByDtProdukte_DtAksesore[0],
                        ID_PRODUKT_AKSESORE,
                        ID_PRODUKTI,
                        ID_AKSESORE_ALUMINI,
                        ID_AKSESORE_XHAMI,
                        ID_AKSESORE,
                        FORMULA,
                        KOD_AKSESORI,
                        EMER_AKSESORI,
                        CMIMI,
                        SASIA,
                        PESHA_SPECIFIKE};
                this.Rows.Add(rowDtAksesoreRow);
                return rowDtAksesoreRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRow FindByIDDtAksesore(int IDDtAksesore) {
                return ((DtAksesoreRow)(this.Rows.Find(new object[] {
                            IDDtAksesore})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DtAksesoreDataTable cln = ((DtAksesoreDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DtAksesoreDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDDtAksesore = base.Columns["IDDtAksesore"];
                this.columnIDDtProdukti = base.Columns["IDDtProdukti"];
                this.columnID_PRODUKT_AKSESORE = base.Columns["ID_PRODUKT_AKSESORE"];
                this.columnID_PRODUKTI = base.Columns["ID_PRODUKTI"];
                this.columnID_AKSESORE_ALUMINI = base.Columns["ID_AKSESORE_ALUMINI"];
                this.columnID_AKSESORE_XHAMI = base.Columns["ID_AKSESORE_XHAMI"];
                this.columnID_AKSESORE = base.Columns["ID_AKSESORE"];
                this.columnFORMULA = base.Columns["FORMULA"];
                this.columnKOD_AKSESORI = base.Columns["KOD_AKSESORI"];
                this.columnEMER_AKSESORI = base.Columns["EMER_AKSESORI"];
                this.columnCMIMI = base.Columns["CMIMI"];
                this.columnSASIA = base.Columns["SASIA"];
                this.columnPESHA_SPECIFIKE = base.Columns["PESHA_SPECIFIKE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDDtAksesore = new System.Data.DataColumn("IDDtAksesore", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDDtAksesore);
                this.columnIDDtProdukti = new System.Data.DataColumn("IDDtProdukti", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDDtProdukti);
                this.columnID_PRODUKT_AKSESORE = new System.Data.DataColumn("ID_PRODUKT_AKSESORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUKT_AKSESORE);
                this.columnID_PRODUKTI = new System.Data.DataColumn("ID_PRODUKTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUKTI);
                this.columnID_AKSESORE_ALUMINI = new System.Data.DataColumn("ID_AKSESORE_ALUMINI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE_ALUMINI);
                this.columnID_AKSESORE_XHAMI = new System.Data.DataColumn("ID_AKSESORE_XHAMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE_XHAMI);
                this.columnID_AKSESORE = new System.Data.DataColumn("ID_AKSESORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE);
                this.columnFORMULA = new System.Data.DataColumn("FORMULA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMULA);
                this.columnKOD_AKSESORI = new System.Data.DataColumn("KOD_AKSESORI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOD_AKSESORI);
                this.columnEMER_AKSESORI = new System.Data.DataColumn("EMER_AKSESORI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_AKSESORI);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.columnSASIA = new System.Data.DataColumn("SASIA", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA);
                this.columnPESHA_SPECIFIKE = new System.Data.DataColumn("PESHA_SPECIFIKE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPESHA_SPECIFIKE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnIDDtAksesore}, true));
                this.columnIDDtAksesore.AutoIncrement = true;
                this.columnIDDtAksesore.AllowDBNull = false;
                this.columnIDDtAksesore.Unique = true;
                this.columnPESHA_SPECIFIKE.DefaultValue = ((decimal)(1m));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRow NewDtAksesoreRow() {
                return ((DtAksesoreRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DtAksesoreRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DtAksesoreRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtAksesoreRowChanged != null)) {
                    this.DtAksesoreRowChanged(this, new DtAksesoreRowChangeEvent(((DtAksesoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtAksesoreRowChanging != null)) {
                    this.DtAksesoreRowChanging(this, new DtAksesoreRowChangeEvent(((DtAksesoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtAksesoreRowDeleted != null)) {
                    this.DtAksesoreRowDeleted(this, new DtAksesoreRowChangeEvent(((DtAksesoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtAksesoreRowDeleting != null)) {
                    this.DtAksesoreRowDeleting(this, new DtAksesoreRowChangeEvent(((DtAksesoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtAksesoreRow(DtAksesoreRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsFatura ds = new DsFatura();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtAksesoreDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtProdukteDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIDDtProdukti;
            
            private System.Data.DataColumn columnID_PRODUKTI;
            
            private System.Data.DataColumn columnEMER_PRODUKTI;
            
            private System.Data.DataColumn columnLLOJ_PRODUKTI;
            
            private System.Data.DataColumn columnLLOJ_SISTEMI;
            
            private System.Data.DataColumn columnGJERESI;
            
            private System.Data.DataColumn columnLARTESI;
            
            private System.Data.DataColumn columnSIPERFAQE;
            
            private System.Data.DataColumn columnNR_KANATE;
            
            private System.Data.DataColumn columnNR_VETRATA;
            
            private System.Data.DataColumn columnNR_COPE;
            
            private System.Data.DataColumn columnPREVENTIVI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteDataTable() {
                this.TableName = "DtProdukte";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtProdukteDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtProdukteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDDtProduktiColumn {
                get {
                    return this.columnIDDtProdukti;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PRODUKTIColumn {
                get {
                    return this.columnID_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_PRODUKTIColumn {
                get {
                    return this.columnEMER_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LLOJ_PRODUKTIColumn {
                get {
                    return this.columnLLOJ_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LLOJ_SISTEMIColumn {
                get {
                    return this.columnLLOJ_SISTEMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GJERESIColumn {
                get {
                    return this.columnGJERESI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LARTESIColumn {
                get {
                    return this.columnLARTESI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SIPERFAQEColumn {
                get {
                    return this.columnSIPERFAQE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NR_KANATEColumn {
                get {
                    return this.columnNR_KANATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NR_VETRATAColumn {
                get {
                    return this.columnNR_VETRATA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NR_COPEColumn {
                get {
                    return this.columnNR_COPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PREVENTIVIColumn {
                get {
                    return this.columnPREVENTIVI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRow this[int index] {
                get {
                    return ((DtProdukteRow)(this.Rows[index]));
                }
            }
            
            public event DtProdukteRowChangeEventHandler DtProdukteRowChanging;
            
            public event DtProdukteRowChangeEventHandler DtProdukteRowChanged;
            
            public event DtProdukteRowChangeEventHandler DtProdukteRowDeleting;
            
            public event DtProdukteRowChangeEventHandler DtProdukteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtProdukteRow(DtProdukteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRow AddDtProdukteRow(string ID_PRODUKTI, string EMER_PRODUKTI, string LLOJ_PRODUKTI, string LLOJ_SISTEMI, string GJERESI, string LARTESI, string SIPERFAQE, string NR_KANATE, string NR_VETRATA, string NR_COPE, string PREVENTIVI) {
                DtProdukteRow rowDtProdukteRow = ((DtProdukteRow)(this.NewRow()));
                rowDtProdukteRow.ItemArray = new object[] {
                        null,
                        ID_PRODUKTI,
                        EMER_PRODUKTI,
                        LLOJ_PRODUKTI,
                        LLOJ_SISTEMI,
                        GJERESI,
                        LARTESI,
                        SIPERFAQE,
                        NR_KANATE,
                        NR_VETRATA,
                        NR_COPE,
                        PREVENTIVI};
                this.Rows.Add(rowDtProdukteRow);
                return rowDtProdukteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRow FindByIDDtProdukti(int IDDtProdukti) {
                return ((DtProdukteRow)(this.Rows.Find(new object[] {
                            IDDtProdukti})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DtProdukteDataTable cln = ((DtProdukteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DtProdukteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDDtProdukti = base.Columns["IDDtProdukti"];
                this.columnID_PRODUKTI = base.Columns["ID_PRODUKTI"];
                this.columnEMER_PRODUKTI = base.Columns["EMER_PRODUKTI"];
                this.columnLLOJ_PRODUKTI = base.Columns["LLOJ_PRODUKTI"];
                this.columnLLOJ_SISTEMI = base.Columns["LLOJ_SISTEMI"];
                this.columnGJERESI = base.Columns["GJERESI"];
                this.columnLARTESI = base.Columns["LARTESI"];
                this.columnSIPERFAQE = base.Columns["SIPERFAQE"];
                this.columnNR_KANATE = base.Columns["NR_KANATE"];
                this.columnNR_VETRATA = base.Columns["NR_VETRATA"];
                this.columnNR_COPE = base.Columns["NR_COPE"];
                this.columnPREVENTIVI = base.Columns["PREVENTIVI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDDtProdukti = new System.Data.DataColumn("IDDtProdukti", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDDtProdukti);
                this.columnID_PRODUKTI = new System.Data.DataColumn("ID_PRODUKTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUKTI);
                this.columnEMER_PRODUKTI = new System.Data.DataColumn("EMER_PRODUKTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_PRODUKTI);
                this.columnLLOJ_PRODUKTI = new System.Data.DataColumn("LLOJ_PRODUKTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLOJ_PRODUKTI);
                this.columnLLOJ_SISTEMI = new System.Data.DataColumn("LLOJ_SISTEMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLOJ_SISTEMI);
                this.columnGJERESI = new System.Data.DataColumn("GJERESI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGJERESI);
                this.columnLARTESI = new System.Data.DataColumn("LARTESI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLARTESI);
                this.columnSIPERFAQE = new System.Data.DataColumn("SIPERFAQE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPERFAQE);
                this.columnNR_KANATE = new System.Data.DataColumn("NR_KANATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_KANATE);
                this.columnNR_VETRATA = new System.Data.DataColumn("NR_VETRATA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_VETRATA);
                this.columnNR_COPE = new System.Data.DataColumn("NR_COPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNR_COPE);
                this.columnPREVENTIVI = new System.Data.DataColumn("PREVENTIVI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREVENTIVI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnIDDtProdukti}, true));
                this.columnIDDtProdukti.AutoIncrement = true;
                this.columnIDDtProdukti.AllowDBNull = false;
                this.columnIDDtProdukti.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRow NewDtProdukteRow() {
                return ((DtProdukteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DtProdukteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DtProdukteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtProdukteRowChanged != null)) {
                    this.DtProdukteRowChanged(this, new DtProdukteRowChangeEvent(((DtProdukteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtProdukteRowChanging != null)) {
                    this.DtProdukteRowChanging(this, new DtProdukteRowChangeEvent(((DtProdukteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtProdukteRowDeleted != null)) {
                    this.DtProdukteRowDeleted(this, new DtProdukteRowChangeEvent(((DtProdukteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtProdukteRowDeleting != null)) {
                    this.DtProdukteRowDeleting(this, new DtProdukteRowChangeEvent(((DtProdukteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtProdukteRow(DtProdukteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsFatura ds = new DsFatura();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtProdukteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtAksesoreRow : System.Data.DataRow {
            
            private DtAksesoreDataTable tableDtAksesore;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtAksesoreRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtAksesore = ((DtAksesoreDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDDtAksesore {
                get {
                    return ((int)(this[this.tableDtAksesore.IDDtAksesoreColumn]));
                }
                set {
                    this[this.tableDtAksesore.IDDtAksesoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDDtProdukti {
                get {
                    try {
                        return ((int)(this[this.tableDtAksesore.IDDtProduktiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IDDtProdukti\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.IDDtProduktiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PRODUKT_AKSESORE {
                get {
                    try {
                        return ((int)(this[this.tableDtAksesore.ID_PRODUKT_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PRODUKT_AKSESORE\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.ID_PRODUKT_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PRODUKTI {
                get {
                    try {
                        return ((int)(this[this.tableDtAksesore.ID_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PRODUKTI\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.ID_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE_ALUMINI {
                get {
                    try {
                        return ((int)(this[this.tableDtAksesore.ID_AKSESORE_ALUMINIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE_ALUMINI\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.ID_AKSESORE_ALUMINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE_XHAMI {
                get {
                    try {
                        return ((int)(this[this.tableDtAksesore.ID_AKSESORE_XHAMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE_XHAMI\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.ID_AKSESORE_XHAMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE {
                get {
                    try {
                        return ((int)(this[this.tableDtAksesore.ID_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.ID_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FORMULA {
                get {
                    try {
                        return ((string)(this[this.tableDtAksesore.FORMULAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FORMULA\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.FORMULAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOD_AKSESORI {
                get {
                    try {
                        return ((string)(this[this.tableDtAksesore.KOD_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KOD_AKSESORI\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.KOD_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_AKSESORI {
                get {
                    try {
                        return ((string)(this[this.tableDtAksesore.EMER_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_AKSESORI\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.EMER_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CMIMI {
                get {
                    try {
                        return ((decimal)(this[this.tableDtAksesore.CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMIMI\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SASIA {
                get {
                    try {
                        return ((decimal)(this[this.tableDtAksesore.SASIAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SASIA\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.SASIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PESHA_SPECIFIKE {
                get {
                    try {
                        return ((decimal)(this[this.tableDtAksesore.PESHA_SPECIFIKEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PESHA_SPECIFIKE\' in table \'DtAksesore\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtAksesore.PESHA_SPECIFIKEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRow DtProdukteRow {
                get {
                    return ((DtProdukteRow)(this.GetParentRow(this.Table.ParentRelations["DtProdukte_DtAksesore"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DtProdukte_DtAksesore"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDDtProduktiNull() {
                return this.IsNull(this.tableDtAksesore.IDDtProduktiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDDtProduktiNull() {
                this[this.tableDtAksesore.IDDtProduktiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PRODUKT_AKSESORENull() {
                return this.IsNull(this.tableDtAksesore.ID_PRODUKT_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PRODUKT_AKSESORENull() {
                this[this.tableDtAksesore.ID_PRODUKT_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PRODUKTINull() {
                return this.IsNull(this.tableDtAksesore.ID_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PRODUKTINull() {
                this[this.tableDtAksesore.ID_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORE_ALUMININull() {
                return this.IsNull(this.tableDtAksesore.ID_AKSESORE_ALUMINIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORE_ALUMININull() {
                this[this.tableDtAksesore.ID_AKSESORE_ALUMINIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORE_XHAMINull() {
                return this.IsNull(this.tableDtAksesore.ID_AKSESORE_XHAMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORE_XHAMINull() {
                this[this.tableDtAksesore.ID_AKSESORE_XHAMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORENull() {
                return this.IsNull(this.tableDtAksesore.ID_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORENull() {
                this[this.tableDtAksesore.ID_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFORMULANull() {
                return this.IsNull(this.tableDtAksesore.FORMULAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFORMULANull() {
                this[this.tableDtAksesore.FORMULAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOD_AKSESORINull() {
                return this.IsNull(this.tableDtAksesore.KOD_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOD_AKSESORINull() {
                this[this.tableDtAksesore.KOD_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_AKSESORINull() {
                return this.IsNull(this.tableDtAksesore.EMER_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_AKSESORINull() {
                this[this.tableDtAksesore.EMER_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMIMINull() {
                return this.IsNull(this.tableDtAksesore.CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMIMINull() {
                this[this.tableDtAksesore.CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSASIANull() {
                return this.IsNull(this.tableDtAksesore.SASIAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSASIANull() {
                this[this.tableDtAksesore.SASIAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPESHA_SPECIFIKENull() {
                return this.IsNull(this.tableDtAksesore.PESHA_SPECIFIKEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPESHA_SPECIFIKENull() {
                this[this.tableDtAksesore.PESHA_SPECIFIKEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtProdukteRow : System.Data.DataRow {
            
            private DtProdukteDataTable tableDtProdukte;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtProdukteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtProdukte = ((DtProdukteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDDtProdukti {
                get {
                    return ((int)(this[this.tableDtProdukte.IDDtProduktiColumn]));
                }
                set {
                    this[this.tableDtProdukte.IDDtProduktiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_PRODUKTI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.ID_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PRODUKTI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.ID_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_PRODUKTI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.EMER_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_PRODUKTI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.EMER_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LLOJ_PRODUKTI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.LLOJ_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LLOJ_PRODUKTI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.LLOJ_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LLOJ_SISTEMI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.LLOJ_SISTEMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LLOJ_SISTEMI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.LLOJ_SISTEMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GJERESI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.GJERESIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GJERESI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.GJERESIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LARTESI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.LARTESIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LARTESI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.LARTESIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIPERFAQE {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.SIPERFAQEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SIPERFAQE\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.SIPERFAQEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NR_KANATE {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.NR_KANATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NR_KANATE\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.NR_KANATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NR_VETRATA {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.NR_VETRATAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NR_VETRATA\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.NR_VETRATAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NR_COPE {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.NR_COPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NR_COPE\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.NR_COPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREVENTIVI {
                get {
                    try {
                        return ((string)(this[this.tableDtProdukte.PREVENTIVIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PREVENTIVI\' in table \'DtProdukte\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtProdukte.PREVENTIVIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PRODUKTINull() {
                return this.IsNull(this.tableDtProdukte.ID_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PRODUKTINull() {
                this[this.tableDtProdukte.ID_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_PRODUKTINull() {
                return this.IsNull(this.tableDtProdukte.EMER_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_PRODUKTINull() {
                this[this.tableDtProdukte.EMER_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLOJ_PRODUKTINull() {
                return this.IsNull(this.tableDtProdukte.LLOJ_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLOJ_PRODUKTINull() {
                this[this.tableDtProdukte.LLOJ_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLOJ_SISTEMINull() {
                return this.IsNull(this.tableDtProdukte.LLOJ_SISTEMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLOJ_SISTEMINull() {
                this[this.tableDtProdukte.LLOJ_SISTEMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGJERESINull() {
                return this.IsNull(this.tableDtProdukte.GJERESIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGJERESINull() {
                this[this.tableDtProdukte.GJERESIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLARTESINull() {
                return this.IsNull(this.tableDtProdukte.LARTESIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLARTESINull() {
                this[this.tableDtProdukte.LARTESIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIPERFAQENull() {
                return this.IsNull(this.tableDtProdukte.SIPERFAQEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIPERFAQENull() {
                this[this.tableDtProdukte.SIPERFAQEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNR_KANATENull() {
                return this.IsNull(this.tableDtProdukte.NR_KANATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNR_KANATENull() {
                this[this.tableDtProdukte.NR_KANATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNR_VETRATANull() {
                return this.IsNull(this.tableDtProdukte.NR_VETRATAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNR_VETRATANull() {
                this[this.tableDtProdukte.NR_VETRATAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNR_COPENull() {
                return this.IsNull(this.tableDtProdukte.NR_COPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNR_COPENull() {
                this[this.tableDtProdukte.NR_COPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREVENTIVINull() {
                return this.IsNull(this.tableDtProdukte.PREVENTIVIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREVENTIVINull() {
                this[this.tableDtProdukte.PREVENTIVIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRow[] GetDtAksesoreRows() {
                return ((DtAksesoreRow[])(base.GetChildRows(this.Table.ChildRelations["DtProdukte_DtAksesore"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtAksesoreRowChangeEvent : System.EventArgs {
            
            private DtAksesoreRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRowChangeEvent(DtAksesoreRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtAksesoreRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtProdukteRowChangeEvent : System.EventArgs {
            
            private DtProdukteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRowChangeEvent(DtProdukteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtProdukteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591