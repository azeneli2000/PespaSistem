//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PespaSistem {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DsShtoAksesoreProdukti")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsShtoAksesoreProdukti : System.Data.DataSet {
        
        private AKSESORE_TOTALDataTable tableAKSESORE_TOTAL;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsShtoAksesoreProdukti() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsShtoAksesoreProdukti(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AKSESORE_TOTAL"] != null)) {
                    base.Tables.Add(new AKSESORE_TOTALDataTable(ds.Tables["AKSESORE_TOTAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AKSESORE_TOTALDataTable AKSESORE_TOTAL {
            get {
                return this.tableAKSESORE_TOTAL;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DsShtoAksesoreProdukti cln = ((DsShtoAksesoreProdukti)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AKSESORE_TOTAL"] != null)) {
                    base.Tables.Add(new AKSESORE_TOTALDataTable(ds.Tables["AKSESORE_TOTAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAKSESORE_TOTAL = ((AKSESORE_TOTALDataTable)(base.Tables["AKSESORE_TOTAL"]));
            if ((initTable == true)) {
                if ((this.tableAKSESORE_TOTAL != null)) {
                    this.tableAKSESORE_TOTAL.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsShtoAksesoreProdukti";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsShtoAksesoreProdukti.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAKSESORE_TOTAL = new AKSESORE_TOTALDataTable();
            base.Tables.Add(this.tableAKSESORE_TOTAL);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAKSESORE_TOTAL() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DsShtoAksesoreProdukti ds = new DsShtoAksesoreProdukti();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void AKSESORE_TOTALRowChangeEventHandler(object sender, AKSESORE_TOTALRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AKSESORE_TOTALDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_AKSESORE;
            
            private System.Data.DataColumn columnKOD_AKSESORE;
            
            private System.Data.DataColumn columnEMER_AKSESORE;
            
            private System.Data.DataColumn columnCMIMI;
            
            private System.Data.DataColumn columnNJESIA_MATESE;
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnPESHA_SPECIFIKE;
            
            private System.Data.DataColumn columnLLOJ_AKSESORE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORE_TOTALDataTable() {
                this.TableName = "AKSESORE_TOTAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AKSESORE_TOTALDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AKSESORE_TOTALDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESOREColumn {
                get {
                    return this.columnID_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOD_AKSESOREColumn {
                get {
                    return this.columnKOD_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_AKSESOREColumn {
                get {
                    return this.columnEMER_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESIA_MATESEColumn {
                get {
                    return this.columnNJESIA_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PESHA_SPECIFIKEColumn {
                get {
                    return this.columnPESHA_SPECIFIKE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LLOJ_AKSESOREColumn {
                get {
                    return this.columnLLOJ_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORE_TOTALRow this[int index] {
                get {
                    return ((AKSESORE_TOTALRow)(this.Rows[index]));
                }
            }
            
            public event AKSESORE_TOTALRowChangeEventHandler AKSESORE_TOTALRowChanging;
            
            public event AKSESORE_TOTALRowChangeEventHandler AKSESORE_TOTALRowChanged;
            
            public event AKSESORE_TOTALRowChangeEventHandler AKSESORE_TOTALRowDeleting;
            
            public event AKSESORE_TOTALRowChangeEventHandler AKSESORE_TOTALRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAKSESORE_TOTALRow(AKSESORE_TOTALRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORE_TOTALRow AddAKSESORE_TOTALRow(int ID_AKSESORE, string KOD_AKSESORE, string EMER_AKSESORE, decimal CMIMI, int NJESIA_MATESE, int ID_CMIMI, double PESHA_SPECIFIKE, string LLOJ_AKSESORE) {
                AKSESORE_TOTALRow rowAKSESORE_TOTALRow = ((AKSESORE_TOTALRow)(this.NewRow()));
                rowAKSESORE_TOTALRow.ItemArray = new object[] {
                        ID_AKSESORE,
                        KOD_AKSESORE,
                        EMER_AKSESORE,
                        CMIMI,
                        NJESIA_MATESE,
                        ID_CMIMI,
                        PESHA_SPECIFIKE,
                        LLOJ_AKSESORE};
                this.Rows.Add(rowAKSESORE_TOTALRow);
                return rowAKSESORE_TOTALRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                AKSESORE_TOTALDataTable cln = ((AKSESORE_TOTALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new AKSESORE_TOTALDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_AKSESORE = base.Columns["ID_AKSESORE"];
                this.columnKOD_AKSESORE = base.Columns["KOD_AKSESORE"];
                this.columnEMER_AKSESORE = base.Columns["EMER_AKSESORE"];
                this.columnCMIMI = base.Columns["CMIMI"];
                this.columnNJESIA_MATESE = base.Columns["NJESIA_MATESE"];
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnPESHA_SPECIFIKE = base.Columns["PESHA_SPECIFIKE"];
                this.columnLLOJ_AKSESORE = base.Columns["LLOJ_AKSESORE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_AKSESORE = new System.Data.DataColumn("ID_AKSESORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE);
                this.columnKOD_AKSESORE = new System.Data.DataColumn("KOD_AKSESORE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOD_AKSESORE);
                this.columnEMER_AKSESORE = new System.Data.DataColumn("EMER_AKSESORE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_AKSESORE);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.columnNJESIA_MATESE = new System.Data.DataColumn("NJESIA_MATESE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESIA_MATESE);
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnPESHA_SPECIFIKE = new System.Data.DataColumn("PESHA_SPECIFIKE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPESHA_SPECIFIKE);
                this.columnLLOJ_AKSESORE = new System.Data.DataColumn("LLOJ_AKSESORE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLOJ_AKSESORE);
                this.columnKOD_AKSESORE.Caption = "KOD_ALUMINI";
                this.columnKOD_AKSESORE.MaxLength = 255;
                this.columnEMER_AKSESORE.Caption = "EMER_ALUMINI";
                this.columnEMER_AKSESORE.MaxLength = 255;
                this.columnLLOJ_AKSESORE.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORE_TOTALRow NewAKSESORE_TOTALRow() {
                return ((AKSESORE_TOTALRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new AKSESORE_TOTALRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(AKSESORE_TOTALRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AKSESORE_TOTALRowChanged != null)) {
                    this.AKSESORE_TOTALRowChanged(this, new AKSESORE_TOTALRowChangeEvent(((AKSESORE_TOTALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AKSESORE_TOTALRowChanging != null)) {
                    this.AKSESORE_TOTALRowChanging(this, new AKSESORE_TOTALRowChangeEvent(((AKSESORE_TOTALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AKSESORE_TOTALRowDeleted != null)) {
                    this.AKSESORE_TOTALRowDeleted(this, new AKSESORE_TOTALRowChangeEvent(((AKSESORE_TOTALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AKSESORE_TOTALRowDeleting != null)) {
                    this.AKSESORE_TOTALRowDeleting(this, new AKSESORE_TOTALRowChangeEvent(((AKSESORE_TOTALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAKSESORE_TOTALRow(AKSESORE_TOTALRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsShtoAksesoreProdukti ds = new DsShtoAksesoreProdukti();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AKSESORE_TOTALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AKSESORE_TOTALRow : System.Data.DataRow {
            
            private AKSESORE_TOTALDataTable tableAKSESORE_TOTAL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AKSESORE_TOTALRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAKSESORE_TOTAL = ((AKSESORE_TOTALDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE_TOTAL.ID_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.ID_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOD_AKSESORE {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE_TOTAL.KOD_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KOD_AKSESORE\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.KOD_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_AKSESORE {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE_TOTAL.EMER_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_AKSESORE\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.EMER_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CMIMI {
                get {
                    try {
                        return ((decimal)(this[this.tableAKSESORE_TOTAL.CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMIMI\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NJESIA_MATESE {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE_TOTAL.NJESIA_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESIA_MATESE\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.NJESIA_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE_TOTAL.ID_CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_CMIMI\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PESHA_SPECIFIKE {
                get {
                    try {
                        return ((double)(this[this.tableAKSESORE_TOTAL.PESHA_SPECIFIKEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PESHA_SPECIFIKE\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.PESHA_SPECIFIKEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LLOJ_AKSESORE {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE_TOTAL.LLOJ_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LLOJ_AKSESORE\' in table \'AKSESORE_TOTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE_TOTAL.LLOJ_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORENull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.ID_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORENull() {
                this[this.tableAKSESORE_TOTAL.ID_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOD_AKSESORENull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.KOD_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOD_AKSESORENull() {
                this[this.tableAKSESORE_TOTAL.KOD_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_AKSESORENull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.EMER_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_AKSESORENull() {
                this[this.tableAKSESORE_TOTAL.EMER_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMIMINull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMIMINull() {
                this[this.tableAKSESORE_TOTAL.CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESIA_MATESENull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.NJESIA_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESIA_MATESENull() {
                this[this.tableAKSESORE_TOTAL.NJESIA_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_CMIMINull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.ID_CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_CMIMINull() {
                this[this.tableAKSESORE_TOTAL.ID_CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPESHA_SPECIFIKENull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.PESHA_SPECIFIKEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPESHA_SPECIFIKENull() {
                this[this.tableAKSESORE_TOTAL.PESHA_SPECIFIKEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLOJ_AKSESORENull() {
                return this.IsNull(this.tableAKSESORE_TOTAL.LLOJ_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLOJ_AKSESORENull() {
                this[this.tableAKSESORE_TOTAL.LLOJ_AKSESOREColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AKSESORE_TOTALRowChangeEvent : System.EventArgs {
            
            private AKSESORE_TOTALRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORE_TOTALRowChangeEvent(AKSESORE_TOTALRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORE_TOTALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PespaSistem.DsShtoAksesoreProduktiTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AKSESORE_TOTALTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AKSESORE_TOTALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AKSESORE_TOTAL";
            tableMapping.ColumnMappings.Add("ID_ALUMINI", "ID_AKSESORE");
            tableMapping.ColumnMappings.Add("KOD_ALUMINI", "KOD_AKSESORE");
            tableMapping.ColumnMappings.Add("EMER_ALUMINI", "EMER_AKSESORE");
            tableMapping.ColumnMappings.Add("CMIMI", "CMIMI");
            tableMapping.ColumnMappings.Add("NJESIA_MATESE", "NJESIA_MATESE");
            tableMapping.ColumnMappings.Add("ID_AKSESORE", "ID_AKSESORE");
            tableMapping.ColumnMappings.Add("KOD_AKSESORE", "KOD_AKSESORE");
            tableMapping.ColumnMappings.Add("EMER_AKSESORE", "EMER_AKSESORE");
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("PESHA_SPECIFIKE", "PESHA_SPECIFIKE");
            tableMapping.ColumnMappings.Add("LLOJ_AKSESORE", "LLOJ_AKSESORE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[4];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ""Alumin"" AS LLOJ_AKSESORE, ALUMIN.ID_ALUMINI AS ID_AKSESORE, ALUMIN.KOD_ALUMINI AS KOD_AKSESORE, ALUMIN.EMER_ALUMINI AS EMER_AKSESORE, 
                      ALUMIN.ID_CMIMI, CMIMET.CMIMI, ALUMIN.NJESIA_MATESE, ALUMIN.PESHA_SPECIFIKE
FROM         (ALUMIN INNER JOIN
                      CMIMET ON ALUMIN.ID_CMIMI = CMIMET.ID_CMIMI)
UNION ALL
SELECT     ""Aksesore"", AKSESORE.ID_AKSESORI, AKSESORE.KOD_AKSESORI, AKSESORE.EMER_AKSESORI, AKSESORE.ID_CMIMI, CMIMET_2.CMIMI, 
                      AKSESORE.NJESIA_MATESE, NULL
FROM         (AKSESORE INNER JOIN
                      CMIMET CMIMET_2 ON AKSESORE.ID_CMIMI = CMIMET_2.ID_CMIMI)
UNION ALL
SELECT     ""Xham"", XHAM.ID_XHAMI, XHAM.KOD_XHAMI, XHAM.EMER_XHAMI, XHAM.ID_CMIMI, CMIMET_1.CMIMI, XHAM.NJESIA_MATESE, NULL
FROM         (XHAM INNER JOIN
                      CMIMET CMIMET_1 ON XHAM.ID_CMIMI = CMIMET_1.ID_CMIMI)";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT * FROM
(
SELECT     'Alumin' AS LLOJ_AKSESORE, ALUMIN.ID_ALUMINI AS ID_AKSESORE, ALUMIN.KOD_ALUMINI AS KOD_AKSESORE, 
                      ALUMIN.EMER_ALUMINI AS EMER_AKSESORE, ALUMIN.ID_CMIMI, CMIMET.CMIMI, ALUMIN.NJESIA_MATESE, ALUMIN.PESHA_SPECIFIKE
FROM         (ALUMIN INNER JOIN
                      CMIMET ON ALUMIN.ID_CMIMI = CMIMET.ID_CMIMI)
UNION ALL
SELECT     'Aksesore' AS LLOJ_AKSESORE, AKSESORE.ID_AKSESORI, AKSESORE.KOD_AKSESORI, AKSESORE.EMER_AKSESORI, AKSESORE.ID_CMIMI, CMIMET_2.CMIMI, 
                      AKSESORE.NJESIA_MATESE, NULL AS PESHA_SPECIFIKE
FROM         (AKSESORE INNER JOIN
                      CMIMET AS CMIMET_2 ON AKSESORE.ID_CMIMI = CMIMET_2.ID_CMIMI)
UNION ALL
SELECT     'Xham' AS LLOJ_AKSESORE, XHAM.ID_XHAMI, XHAM.KOD_XHAMI, XHAM.EMER_XHAMI, XHAM.ID_CMIMI, CMIMET_1.CMIMI, XHAM.NJESIA_MATESE, NULL 
                      AS PESHA_SPECIFIKE
FROM         (XHAM INNER JOIN
                      CMIMET AS  CMIMET_1 ON XHAM.ID_CMIMI = CMIMET_1.ID_CMIMI)
)
WHERE (EMER_AKSESORE LIKE ? + '%')";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORE", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     LLOJ_AKSESORE, ID_AKSESORE, KOD_AKSESORE, EMER_AKSESORE, ID_CMIMI, CMI" +
                "MI, NJESIA_MATESE, PESHA_SPECIFIKE\r\nFROM         (SELECT     \'Alumin\' AS LLOJ_AK" +
                "SESORE, ALUMIN.ID_ALUMINI AS ID_AKSESORE, ALUMIN.KOD_ALUMINI AS KOD_AKSESORE, \r\n" +
                "                                              ALUMIN.EMER_ALUMINI AS EMER_AKSESO" +
                "RE, ALUMIN.ID_CMIMI, CMIMET.CMIMI, ALUMIN.NJESIA_MATESE, \r\n                     " +
                "                         ALUMIN.PESHA_SPECIFIKE\r\n                       FROM    " +
                "      (ALUMIN INNER JOIN\r\n                                              CMIMET O" +
                "N ALUMIN.ID_CMIMI = CMIMET.ID_CMIMI)\r\n                       UNION ALL\r\n        " +
                "               SELECT     \'Aksesore\' AS LLOJ_AKSESORE, AKSESORE.ID_AKSESORI, AKS" +
                "ESORE.KOD_AKSESORI, AKSESORE.EMER_AKSESORI, \r\n                                  " +
                "           AKSESORE.ID_CMIMI, CMIMET_2.CMIMI, AKSESORE.NJESIA_MATESE, NULL AS PE" +
                "SHA_SPECIFIKE\r\n                       FROM         (AKSESORE INNER JOIN\r\n       " +
                "                                      CMIMET CMIMET_2 ON AKSESORE.ID_CMIMI = CMI" +
                "MET_2.ID_CMIMI)\r\n                       UNION ALL\r\n                       SELECT" +
                "     \'Xham\' AS LLOJ_AKSESORE, XHAM.ID_XHAMI, XHAM.KOD_XHAMI, XHAM.EMER_XHAMI, XH" +
                "AM.ID_CMIMI, CMIMET_1.CMIMI, \r\n                                             XHAM" +
                ".NJESIA_MATESE, NULL AS PESHA_SPECIFIKE\r\n                       FROM         (XH" +
                "AM INNER JOIN\r\n                                             CMIMET CMIMET_1 ON X" +
                "HAM.ID_CMIMI = CMIMET_1.ID_CMIMI))\r\nWHERE     (KOD_AKSESORE LIKE ? + \'%\')";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_AKSESORE", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT * FROM
(
SELECT     'Alumin' AS LLOJ_AKSESORE, ALUMIN.ID_ALUMINI AS ID_AKSESORE, ALUMIN.KOD_ALUMINI AS KOD_AKSESORE, 
                      ALUMIN.EMER_ALUMINI AS EMER_AKSESORE, ALUMIN.ID_CMIMI, CMIMET.CMIMI, ALUMIN.NJESIA_MATESE, ALUMIN.PESHA_SPECIFIKE
FROM         (ALUMIN INNER JOIN
                      CMIMET ON ALUMIN.ID_CMIMI = CMIMET.ID_CMIMI)
UNION ALL
SELECT     'Aksesore' AS LLOJ_AKSESORE, AKSESORE.ID_AKSESORI, AKSESORE.KOD_AKSESORI, AKSESORE.EMER_AKSESORI, AKSESORE.ID_CMIMI, CMIMET_2.CMIMI, 
                      AKSESORE.NJESIA_MATESE, NULL AS PESHA_SPECIFIKE
FROM         (AKSESORE INNER JOIN
                      CMIMET AS CMIMET_2 ON AKSESORE.ID_CMIMI = CMIMET_2.ID_CMIMI)
UNION ALL
SELECT     'Xham' AS LLOJ_AKSESORE, XHAM.ID_XHAMI, XHAM.KOD_XHAMI, XHAM.EMER_XHAMI, XHAM.ID_CMIMI, CMIMET_1.CMIMI, XHAM.NJESIA_MATESE, NULL 
                      AS PESHA_SPECIFIKE
FROM         (XHAM INNER JOIN
                      CMIMET AS  CMIMET_1 ON XHAM.ID_CMIMI = CMIMET_1.ID_CMIMI)
)
WHERE (LLOJ_AKSESORE = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("LLOJ_AKSESORE", System.Data.OleDb.OleDbType.VarChar, 1024, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LLOJ_AKSESORE", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable = new DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByEmerAksesore(DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable, string EMER_AKSESORE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EMER_AKSESORE == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(EMER_AKSESORE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable GetDataByEmerAksesore(string EMER_AKSESORE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EMER_AKSESORE == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(EMER_AKSESORE));
            }
            DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable = new DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKodAksesore(DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable, string KOD_AKSESORE) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((KOD_AKSESORE == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KOD_AKSESORE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable GetDataByKodAksesore(string KOD_AKSESORE) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((KOD_AKSESORE == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KOD_AKSESORE));
            }
            DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable = new DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLlojAksesore(DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable, string LLOJ_AKSESORE) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((LLOJ_AKSESORE == null)) {
                throw new System.ArgumentNullException("LLOJ_AKSESORE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(LLOJ_AKSESORE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable GetDataByLlojAksesore(string LLOJ_AKSESORE) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((LLOJ_AKSESORE == null)) {
                throw new System.ArgumentNullException("LLOJ_AKSESORE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(LLOJ_AKSESORE));
            }
            DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable dataTable = new DsShtoAksesoreProdukti.AKSESORE_TOTALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591