//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PespaSistem {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DsAksesore")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsAksesore : System.Data.DataSet {
        
        private AKSESOREDataTable tableAKSESORE;
        
        private ALUMINDataTable tableALUMIN;
        
        private XHAMDataTable tableXHAM;
        
        private CMIMETDataTable tableCMIMET;
        
        private System.Data.DataRelation relationALUMIN_AKSESORE;
        
        private System.Data.DataRelation relationXHAM_AKSESORE;
        
        private System.Data.DataRelation relationCMIMET_AKSESORE;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsAksesore() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsAksesore(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AKSESORE"] != null)) {
                    base.Tables.Add(new AKSESOREDataTable(ds.Tables["AKSESORE"]));
                }
                if ((ds.Tables["ALUMIN"] != null)) {
                    base.Tables.Add(new ALUMINDataTable(ds.Tables["ALUMIN"]));
                }
                if ((ds.Tables["XHAM"] != null)) {
                    base.Tables.Add(new XHAMDataTable(ds.Tables["XHAM"]));
                }
                if ((ds.Tables["CMIMET"] != null)) {
                    base.Tables.Add(new CMIMETDataTable(ds.Tables["CMIMET"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AKSESOREDataTable AKSESORE {
            get {
                return this.tableAKSESORE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ALUMINDataTable ALUMIN {
            get {
                return this.tableALUMIN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public XHAMDataTable XHAM {
            get {
                return this.tableXHAM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CMIMETDataTable CMIMET {
            get {
                return this.tableCMIMET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DsAksesore cln = ((DsAksesore)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AKSESORE"] != null)) {
                    base.Tables.Add(new AKSESOREDataTable(ds.Tables["AKSESORE"]));
                }
                if ((ds.Tables["ALUMIN"] != null)) {
                    base.Tables.Add(new ALUMINDataTable(ds.Tables["ALUMIN"]));
                }
                if ((ds.Tables["XHAM"] != null)) {
                    base.Tables.Add(new XHAMDataTable(ds.Tables["XHAM"]));
                }
                if ((ds.Tables["CMIMET"] != null)) {
                    base.Tables.Add(new CMIMETDataTable(ds.Tables["CMIMET"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAKSESORE = ((AKSESOREDataTable)(base.Tables["AKSESORE"]));
            if ((initTable == true)) {
                if ((this.tableAKSESORE != null)) {
                    this.tableAKSESORE.InitVars();
                }
            }
            this.tableALUMIN = ((ALUMINDataTable)(base.Tables["ALUMIN"]));
            if ((initTable == true)) {
                if ((this.tableALUMIN != null)) {
                    this.tableALUMIN.InitVars();
                }
            }
            this.tableXHAM = ((XHAMDataTable)(base.Tables["XHAM"]));
            if ((initTable == true)) {
                if ((this.tableXHAM != null)) {
                    this.tableXHAM.InitVars();
                }
            }
            this.tableCMIMET = ((CMIMETDataTable)(base.Tables["CMIMET"]));
            if ((initTable == true)) {
                if ((this.tableCMIMET != null)) {
                    this.tableCMIMET.InitVars();
                }
            }
            this.relationALUMIN_AKSESORE = this.Relations["ALUMIN_AKSESORE"];
            this.relationXHAM_AKSESORE = this.Relations["XHAM_AKSESORE"];
            this.relationCMIMET_AKSESORE = this.Relations["CMIMET_AKSESORE"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsAksesore";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsAksesore.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAKSESORE = new AKSESOREDataTable();
            base.Tables.Add(this.tableAKSESORE);
            this.tableALUMIN = new ALUMINDataTable();
            base.Tables.Add(this.tableALUMIN);
            this.tableXHAM = new XHAMDataTable();
            base.Tables.Add(this.tableXHAM);
            this.tableCMIMET = new CMIMETDataTable();
            base.Tables.Add(this.tableCMIMET);
            this.relationALUMIN_AKSESORE = new System.Data.DataRelation("ALUMIN_AKSESORE", new System.Data.DataColumn[] {
                        this.tableALUMIN.ID_ALUMINIColumn}, new System.Data.DataColumn[] {
                        this.tableAKSESORE.ID_ALUMINIColumn}, false);
            this.Relations.Add(this.relationALUMIN_AKSESORE);
            this.relationXHAM_AKSESORE = new System.Data.DataRelation("XHAM_AKSESORE", new System.Data.DataColumn[] {
                        this.tableXHAM.ID_XHAMIColumn}, new System.Data.DataColumn[] {
                        this.tableAKSESORE.ID_XHAMIColumn}, false);
            this.Relations.Add(this.relationXHAM_AKSESORE);
            this.relationCMIMET_AKSESORE = new System.Data.DataRelation("CMIMET_AKSESORE", new System.Data.DataColumn[] {
                        this.tableCMIMET.ID_CMIMIColumn}, new System.Data.DataColumn[] {
                        this.tableAKSESORE.ID_CMIMIColumn}, false);
            this.Relations.Add(this.relationCMIMET_AKSESORE);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAKSESORE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeALUMIN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeXHAM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCMIMET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DsAksesore ds = new DsAksesore();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void AKSESORERowChangeEventHandler(object sender, AKSESORERowChangeEvent e);
        
        public delegate void ALUMINRowChangeEventHandler(object sender, ALUMINRowChangeEvent e);
        
        public delegate void XHAMRowChangeEventHandler(object sender, XHAMRowChangeEvent e);
        
        public delegate void CMIMETRowChangeEventHandler(object sender, CMIMETRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AKSESOREDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_AKSESORI;
            
            private System.Data.DataColumn columnKOD_AKSESORI;
            
            private System.Data.DataColumn columnEMER_AKSESORI;
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnID_ALUMINI;
            
            private System.Data.DataColumn columnNJESIA_MATESE;
            
            private System.Data.DataColumn columnID_XHAMI;
            
            private System.Data.DataColumn columnVARESIA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESOREDataTable() {
                this.TableName = "AKSESORE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AKSESOREDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AKSESOREDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORIColumn {
                get {
                    return this.columnID_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOD_AKSESORIColumn {
                get {
                    return this.columnKOD_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_AKSESORIColumn {
                get {
                    return this.columnEMER_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ALUMINIColumn {
                get {
                    return this.columnID_ALUMINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESIA_MATESEColumn {
                get {
                    return this.columnNJESIA_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_XHAMIColumn {
                get {
                    return this.columnID_XHAMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VARESIAColumn {
                get {
                    return this.columnVARESIA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow this[int index] {
                get {
                    return ((AKSESORERow)(this.Rows[index]));
                }
            }
            
            public event AKSESORERowChangeEventHandler AKSESORERowChanging;
            
            public event AKSESORERowChangeEventHandler AKSESORERowChanged;
            
            public event AKSESORERowChangeEventHandler AKSESORERowDeleting;
            
            public event AKSESORERowChangeEventHandler AKSESORERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAKSESORERow(AKSESORERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow AddAKSESORERow(string KOD_AKSESORI, string EMER_AKSESORI, CMIMETRow parentCMIMETRowByCMIMET_AKSESORE, ALUMINRow parentALUMINRowByALUMIN_AKSESORE, int NJESIA_MATESE, XHAMRow parentXHAMRowByXHAM_AKSESORE, string VARESIA) {
                AKSESORERow rowAKSESORERow = ((AKSESORERow)(this.NewRow()));
                rowAKSESORERow.ItemArray = new object[] {
                        null,
                        KOD_AKSESORI,
                        EMER_AKSESORI,
                        parentCMIMETRowByCMIMET_AKSESORE[0],
                        parentALUMINRowByALUMIN_AKSESORE[0],
                        NJESIA_MATESE,
                        parentXHAMRowByXHAM_AKSESORE[0],
                        VARESIA};
                this.Rows.Add(rowAKSESORERow);
                return rowAKSESORERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow FindByID_AKSESORI(int ID_AKSESORI) {
                return ((AKSESORERow)(this.Rows.Find(new object[] {
                            ID_AKSESORI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                AKSESOREDataTable cln = ((AKSESOREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new AKSESOREDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_AKSESORI = base.Columns["ID_AKSESORI"];
                this.columnKOD_AKSESORI = base.Columns["KOD_AKSESORI"];
                this.columnEMER_AKSESORI = base.Columns["EMER_AKSESORI"];
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnID_ALUMINI = base.Columns["ID_ALUMINI"];
                this.columnNJESIA_MATESE = base.Columns["NJESIA_MATESE"];
                this.columnID_XHAMI = base.Columns["ID_XHAMI"];
                this.columnVARESIA = base.Columns["VARESIA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_AKSESORI = new System.Data.DataColumn("ID_AKSESORI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORI);
                this.columnKOD_AKSESORI = new System.Data.DataColumn("KOD_AKSESORI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOD_AKSESORI);
                this.columnEMER_AKSESORI = new System.Data.DataColumn("EMER_AKSESORI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_AKSESORI);
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnID_ALUMINI = new System.Data.DataColumn("ID_ALUMINI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ALUMINI);
                this.columnNJESIA_MATESE = new System.Data.DataColumn("NJESIA_MATESE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESIA_MATESE);
                this.columnID_XHAMI = new System.Data.DataColumn("ID_XHAMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_XHAMI);
                this.columnVARESIA = new System.Data.DataColumn("VARESIA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVARESIA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_AKSESORI}, true));
                this.columnID_AKSESORI.AutoIncrement = true;
                this.columnID_AKSESORI.AllowDBNull = false;
                this.columnID_AKSESORI.Unique = true;
                this.columnKOD_AKSESORI.MaxLength = 50;
                this.columnEMER_AKSESORI.MaxLength = 50;
                this.columnVARESIA.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow NewAKSESORERow() {
                return ((AKSESORERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new AKSESORERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(AKSESORERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AKSESORERowChanged != null)) {
                    this.AKSESORERowChanged(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AKSESORERowChanging != null)) {
                    this.AKSESORERowChanging(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AKSESORERowDeleted != null)) {
                    this.AKSESORERowDeleted(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AKSESORERowDeleting != null)) {
                    this.AKSESORERowDeleting(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAKSESORERow(AKSESORERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsAksesore ds = new DsAksesore();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AKSESOREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ALUMINDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_ALUMINI;
            
            private System.Data.DataColumn columnKOD_ALUMINI;
            
            private System.Data.DataColumn columnEMER_ALUMINI;
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnPESHA_SPECIFIKE;
            
            private System.Data.DataColumn columnNJESIA_MATESE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINDataTable() {
                this.TableName = "ALUMIN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ALUMINDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ALUMINDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_ALUMINIColumn {
                get {
                    return this.columnID_ALUMINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOD_ALUMINIColumn {
                get {
                    return this.columnKOD_ALUMINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_ALUMINIColumn {
                get {
                    return this.columnEMER_ALUMINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PESHA_SPECIFIKEColumn {
                get {
                    return this.columnPESHA_SPECIFIKE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESIA_MATESEColumn {
                get {
                    return this.columnNJESIA_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRow this[int index] {
                get {
                    return ((ALUMINRow)(this.Rows[index]));
                }
            }
            
            public event ALUMINRowChangeEventHandler ALUMINRowChanging;
            
            public event ALUMINRowChangeEventHandler ALUMINRowChanged;
            
            public event ALUMINRowChangeEventHandler ALUMINRowDeleting;
            
            public event ALUMINRowChangeEventHandler ALUMINRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddALUMINRow(ALUMINRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRow AddALUMINRow(string KOD_ALUMINI, string EMER_ALUMINI, int ID_CMIMI, double PESHA_SPECIFIKE, short NJESIA_MATESE) {
                ALUMINRow rowALUMINRow = ((ALUMINRow)(this.NewRow()));
                rowALUMINRow.ItemArray = new object[] {
                        null,
                        KOD_ALUMINI,
                        EMER_ALUMINI,
                        ID_CMIMI,
                        PESHA_SPECIFIKE,
                        NJESIA_MATESE};
                this.Rows.Add(rowALUMINRow);
                return rowALUMINRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRow FindByID_ALUMINI(int ID_ALUMINI) {
                return ((ALUMINRow)(this.Rows.Find(new object[] {
                            ID_ALUMINI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ALUMINDataTable cln = ((ALUMINDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ALUMINDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_ALUMINI = base.Columns["ID_ALUMINI"];
                this.columnKOD_ALUMINI = base.Columns["KOD_ALUMINI"];
                this.columnEMER_ALUMINI = base.Columns["EMER_ALUMINI"];
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnPESHA_SPECIFIKE = base.Columns["PESHA_SPECIFIKE"];
                this.columnNJESIA_MATESE = base.Columns["NJESIA_MATESE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_ALUMINI = new System.Data.DataColumn("ID_ALUMINI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ALUMINI);
                this.columnKOD_ALUMINI = new System.Data.DataColumn("KOD_ALUMINI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOD_ALUMINI);
                this.columnEMER_ALUMINI = new System.Data.DataColumn("EMER_ALUMINI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_ALUMINI);
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnPESHA_SPECIFIKE = new System.Data.DataColumn("PESHA_SPECIFIKE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPESHA_SPECIFIKE);
                this.columnNJESIA_MATESE = new System.Data.DataColumn("NJESIA_MATESE", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESIA_MATESE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_ALUMINI}, true));
                this.columnID_ALUMINI.AutoIncrement = true;
                this.columnID_ALUMINI.AllowDBNull = false;
                this.columnID_ALUMINI.Unique = true;
                this.columnKOD_ALUMINI.MaxLength = 50;
                this.columnEMER_ALUMINI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRow NewALUMINRow() {
                return ((ALUMINRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ALUMINRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ALUMINRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ALUMINRowChanged != null)) {
                    this.ALUMINRowChanged(this, new ALUMINRowChangeEvent(((ALUMINRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ALUMINRowChanging != null)) {
                    this.ALUMINRowChanging(this, new ALUMINRowChangeEvent(((ALUMINRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ALUMINRowDeleted != null)) {
                    this.ALUMINRowDeleted(this, new ALUMINRowChangeEvent(((ALUMINRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ALUMINRowDeleting != null)) {
                    this.ALUMINRowDeleting(this, new ALUMINRowChangeEvent(((ALUMINRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveALUMINRow(ALUMINRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsAksesore ds = new DsAksesore();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ALUMINDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class XHAMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_XHAMI;
            
            private System.Data.DataColumn columnKOD_XHAMI;
            
            private System.Data.DataColumn columnEMER_XHAMI;
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnNJESIA_MATESE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMDataTable() {
                this.TableName = "XHAM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal XHAMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected XHAMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_XHAMIColumn {
                get {
                    return this.columnID_XHAMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KOD_XHAMIColumn {
                get {
                    return this.columnKOD_XHAMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_XHAMIColumn {
                get {
                    return this.columnEMER_XHAMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESIA_MATESEColumn {
                get {
                    return this.columnNJESIA_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRow this[int index] {
                get {
                    return ((XHAMRow)(this.Rows[index]));
                }
            }
            
            public event XHAMRowChangeEventHandler XHAMRowChanging;
            
            public event XHAMRowChangeEventHandler XHAMRowChanged;
            
            public event XHAMRowChangeEventHandler XHAMRowDeleting;
            
            public event XHAMRowChangeEventHandler XHAMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddXHAMRow(XHAMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRow AddXHAMRow(string KOD_XHAMI, string EMER_XHAMI, int ID_CMIMI, int NJESIA_MATESE) {
                XHAMRow rowXHAMRow = ((XHAMRow)(this.NewRow()));
                rowXHAMRow.ItemArray = new object[] {
                        null,
                        KOD_XHAMI,
                        EMER_XHAMI,
                        ID_CMIMI,
                        NJESIA_MATESE};
                this.Rows.Add(rowXHAMRow);
                return rowXHAMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRow FindByID_XHAMI(int ID_XHAMI) {
                return ((XHAMRow)(this.Rows.Find(new object[] {
                            ID_XHAMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                XHAMDataTable cln = ((XHAMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new XHAMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_XHAMI = base.Columns["ID_XHAMI"];
                this.columnKOD_XHAMI = base.Columns["KOD_XHAMI"];
                this.columnEMER_XHAMI = base.Columns["EMER_XHAMI"];
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnNJESIA_MATESE = base.Columns["NJESIA_MATESE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_XHAMI = new System.Data.DataColumn("ID_XHAMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_XHAMI);
                this.columnKOD_XHAMI = new System.Data.DataColumn("KOD_XHAMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOD_XHAMI);
                this.columnEMER_XHAMI = new System.Data.DataColumn("EMER_XHAMI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_XHAMI);
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnNJESIA_MATESE = new System.Data.DataColumn("NJESIA_MATESE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESIA_MATESE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_XHAMI}, true));
                this.columnID_XHAMI.AutoIncrement = true;
                this.columnID_XHAMI.AllowDBNull = false;
                this.columnID_XHAMI.Unique = true;
                this.columnKOD_XHAMI.MaxLength = 50;
                this.columnEMER_XHAMI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRow NewXHAMRow() {
                return ((XHAMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new XHAMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(XHAMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.XHAMRowChanged != null)) {
                    this.XHAMRowChanged(this, new XHAMRowChangeEvent(((XHAMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.XHAMRowChanging != null)) {
                    this.XHAMRowChanging(this, new XHAMRowChangeEvent(((XHAMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.XHAMRowDeleted != null)) {
                    this.XHAMRowDeleted(this, new XHAMRowChangeEvent(((XHAMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.XHAMRowDeleting != null)) {
                    this.XHAMRowDeleting(this, new XHAMRowChangeEvent(((XHAMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveXHAMRow(XHAMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsAksesore ds = new DsAksesore();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "XHAMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CMIMETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_CMIMI;
            
            private System.Data.DataColumn columnCMIMI;
            
            private System.Data.DataColumn columnID_AKSESORI;
            
            private System.Data.DataColumn columnAL_AK_XH;
            
            private System.Data.DataColumn columnDATE_FILLIMI;
            
            private System.Data.DataColumn columnDATE_MBARIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETDataTable() {
                this.TableName = "CMIMET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CMIMETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_CMIMIColumn {
                get {
                    return this.columnID_CMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORIColumn {
                get {
                    return this.columnID_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AL_AK_XHColumn {
                get {
                    return this.columnAL_AK_XH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_FILLIMIColumn {
                get {
                    return this.columnDATE_FILLIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_MBARIMIColumn {
                get {
                    return this.columnDATE_MBARIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow this[int index] {
                get {
                    return ((CMIMETRow)(this.Rows[index]));
                }
            }
            
            public event CMIMETRowChangeEventHandler CMIMETRowChanging;
            
            public event CMIMETRowChangeEventHandler CMIMETRowChanged;
            
            public event CMIMETRowChangeEventHandler CMIMETRowDeleting;
            
            public event CMIMETRowChangeEventHandler CMIMETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCMIMETRow(CMIMETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow AddCMIMETRow(decimal CMIMI, int ID_AKSESORI, int AL_AK_XH, System.DateTime DATE_FILLIMI, System.DateTime DATE_MBARIMI) {
                CMIMETRow rowCMIMETRow = ((CMIMETRow)(this.NewRow()));
                rowCMIMETRow.ItemArray = new object[] {
                        null,
                        CMIMI,
                        ID_AKSESORI,
                        AL_AK_XH,
                        DATE_FILLIMI,
                        DATE_MBARIMI};
                this.Rows.Add(rowCMIMETRow);
                return rowCMIMETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow FindByID_CMIMI(int ID_CMIMI) {
                return ((CMIMETRow)(this.Rows.Find(new object[] {
                            ID_CMIMI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CMIMETDataTable cln = ((CMIMETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CMIMETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_CMIMI = base.Columns["ID_CMIMI"];
                this.columnCMIMI = base.Columns["CMIMI"];
                this.columnID_AKSESORI = base.Columns["ID_AKSESORI"];
                this.columnAL_AK_XH = base.Columns["AL_AK_XH"];
                this.columnDATE_FILLIMI = base.Columns["DATE_FILLIMI"];
                this.columnDATE_MBARIMI = base.Columns["DATE_MBARIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_CMIMI = new System.Data.DataColumn("ID_CMIMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CMIMI);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.columnID_AKSESORI = new System.Data.DataColumn("ID_AKSESORI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORI);
                this.columnAL_AK_XH = new System.Data.DataColumn("AL_AK_XH", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAL_AK_XH);
                this.columnDATE_FILLIMI = new System.Data.DataColumn("DATE_FILLIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_FILLIMI);
                this.columnDATE_MBARIMI = new System.Data.DataColumn("DATE_MBARIMI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_MBARIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_CMIMI}, true));
                this.columnID_CMIMI.AutoIncrement = true;
                this.columnID_CMIMI.AllowDBNull = false;
                this.columnID_CMIMI.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow NewCMIMETRow() {
                return ((CMIMETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CMIMETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CMIMETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CMIMETRowChanged != null)) {
                    this.CMIMETRowChanged(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CMIMETRowChanging != null)) {
                    this.CMIMETRowChanging(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CMIMETRowDeleted != null)) {
                    this.CMIMETRowDeleted(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CMIMETRowDeleting != null)) {
                    this.CMIMETRowDeleting(this, new CMIMETRowChangeEvent(((CMIMETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCMIMETRow(CMIMETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsAksesore ds = new DsAksesore();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CMIMETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AKSESORERow : System.Data.DataRow {
            
            private AKSESOREDataTable tableAKSESORE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AKSESORERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAKSESORE = ((AKSESOREDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORI {
                get {
                    return ((int)(this[this.tableAKSESORE.ID_AKSESORIColumn]));
                }
                set {
                    this[this.tableAKSESORE.ID_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOD_AKSESORI {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE.KOD_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KOD_AKSESORI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.KOD_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_AKSESORI {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE.EMER_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_AKSESORI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.EMER_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.ID_CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_CMIMI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ALUMINI {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.ID_ALUMINIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_ALUMINI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.ID_ALUMINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NJESIA_MATESE {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.NJESIA_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESIA_MATESE\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.NJESIA_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_XHAMI {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.ID_XHAMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_XHAMI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.ID_XHAMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VARESIA {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE.VARESIAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VARESIA\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.VARESIAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRow ALUMINRow {
                get {
                    return ((ALUMINRow)(this.GetParentRow(this.Table.ParentRelations["ALUMIN_AKSESORE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ALUMIN_AKSESORE"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRow XHAMRow {
                get {
                    return ((XHAMRow)(this.GetParentRow(this.Table.ParentRelations["XHAM_AKSESORE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["XHAM_AKSESORE"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow CMIMETRow {
                get {
                    return ((CMIMETRow)(this.GetParentRow(this.Table.ParentRelations["CMIMET_AKSESORE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CMIMET_AKSESORE"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOD_AKSESORINull() {
                return this.IsNull(this.tableAKSESORE.KOD_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOD_AKSESORINull() {
                this[this.tableAKSESORE.KOD_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_AKSESORINull() {
                return this.IsNull(this.tableAKSESORE.EMER_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_AKSESORINull() {
                this[this.tableAKSESORE.EMER_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_CMIMINull() {
                return this.IsNull(this.tableAKSESORE.ID_CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_CMIMINull() {
                this[this.tableAKSESORE.ID_CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_ALUMININull() {
                return this.IsNull(this.tableAKSESORE.ID_ALUMINIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_ALUMININull() {
                this[this.tableAKSESORE.ID_ALUMINIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESIA_MATESENull() {
                return this.IsNull(this.tableAKSESORE.NJESIA_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESIA_MATESENull() {
                this[this.tableAKSESORE.NJESIA_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_XHAMINull() {
                return this.IsNull(this.tableAKSESORE.ID_XHAMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_XHAMINull() {
                this[this.tableAKSESORE.ID_XHAMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVARESIANull() {
                return this.IsNull(this.tableAKSESORE.VARESIAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVARESIANull() {
                this[this.tableAKSESORE.VARESIAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ALUMINRow : System.Data.DataRow {
            
            private ALUMINDataTable tableALUMIN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ALUMINRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableALUMIN = ((ALUMINDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_ALUMINI {
                get {
                    return ((int)(this[this.tableALUMIN.ID_ALUMINIColumn]));
                }
                set {
                    this[this.tableALUMIN.ID_ALUMINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOD_ALUMINI {
                get {
                    try {
                        return ((string)(this[this.tableALUMIN.KOD_ALUMINIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KOD_ALUMINI\' in table \'ALUMIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMIN.KOD_ALUMINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_ALUMINI {
                get {
                    try {
                        return ((string)(this[this.tableALUMIN.EMER_ALUMINIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_ALUMINI\' in table \'ALUMIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMIN.EMER_ALUMINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    try {
                        return ((int)(this[this.tableALUMIN.ID_CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_CMIMI\' in table \'ALUMIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMIN.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PESHA_SPECIFIKE {
                get {
                    try {
                        return ((double)(this[this.tableALUMIN.PESHA_SPECIFIKEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PESHA_SPECIFIKE\' in table \'ALUMIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMIN.PESHA_SPECIFIKEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short NJESIA_MATESE {
                get {
                    try {
                        return ((short)(this[this.tableALUMIN.NJESIA_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESIA_MATESE\' in table \'ALUMIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableALUMIN.NJESIA_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOD_ALUMININull() {
                return this.IsNull(this.tableALUMIN.KOD_ALUMINIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOD_ALUMININull() {
                this[this.tableALUMIN.KOD_ALUMINIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_ALUMININull() {
                return this.IsNull(this.tableALUMIN.EMER_ALUMINIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_ALUMININull() {
                this[this.tableALUMIN.EMER_ALUMINIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_CMIMINull() {
                return this.IsNull(this.tableALUMIN.ID_CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_CMIMINull() {
                this[this.tableALUMIN.ID_CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPESHA_SPECIFIKENull() {
                return this.IsNull(this.tableALUMIN.PESHA_SPECIFIKEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPESHA_SPECIFIKENull() {
                this[this.tableALUMIN.PESHA_SPECIFIKEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESIA_MATESENull() {
                return this.IsNull(this.tableALUMIN.NJESIA_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESIA_MATESENull() {
                this[this.tableALUMIN.NJESIA_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow[] GetAKSESORERows() {
                return ((AKSESORERow[])(base.GetChildRows(this.Table.ChildRelations["ALUMIN_AKSESORE"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class XHAMRow : System.Data.DataRow {
            
            private XHAMDataTable tableXHAM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal XHAMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableXHAM = ((XHAMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_XHAMI {
                get {
                    return ((int)(this[this.tableXHAM.ID_XHAMIColumn]));
                }
                set {
                    this[this.tableXHAM.ID_XHAMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KOD_XHAMI {
                get {
                    try {
                        return ((string)(this[this.tableXHAM.KOD_XHAMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KOD_XHAMI\' in table \'XHAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXHAM.KOD_XHAMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_XHAMI {
                get {
                    try {
                        return ((string)(this[this.tableXHAM.EMER_XHAMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_XHAMI\' in table \'XHAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXHAM.EMER_XHAMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    try {
                        return ((int)(this[this.tableXHAM.ID_CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_CMIMI\' in table \'XHAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXHAM.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NJESIA_MATESE {
                get {
                    try {
                        return ((int)(this[this.tableXHAM.NJESIA_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESIA_MATESE\' in table \'XHAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableXHAM.NJESIA_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOD_XHAMINull() {
                return this.IsNull(this.tableXHAM.KOD_XHAMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOD_XHAMINull() {
                this[this.tableXHAM.KOD_XHAMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_XHAMINull() {
                return this.IsNull(this.tableXHAM.EMER_XHAMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_XHAMINull() {
                this[this.tableXHAM.EMER_XHAMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_CMIMINull() {
                return this.IsNull(this.tableXHAM.ID_CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_CMIMINull() {
                this[this.tableXHAM.ID_CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESIA_MATESENull() {
                return this.IsNull(this.tableXHAM.NJESIA_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESIA_MATESENull() {
                this[this.tableXHAM.NJESIA_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow[] GetAKSESORERows() {
                return ((AKSESORERow[])(base.GetChildRows(this.Table.ChildRelations["XHAM_AKSESORE"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CMIMETRow : System.Data.DataRow {
            
            private CMIMETDataTable tableCMIMET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CMIMETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCMIMET = ((CMIMETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CMIMI {
                get {
                    return ((int)(this[this.tableCMIMET.ID_CMIMIColumn]));
                }
                set {
                    this[this.tableCMIMET.ID_CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CMIMI {
                get {
                    try {
                        return ((decimal)(this[this.tableCMIMET.CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMIMI\' in table \'CMIMET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCMIMET.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORI {
                get {
                    try {
                        return ((int)(this[this.tableCMIMET.ID_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORI\' in table \'CMIMET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCMIMET.ID_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AL_AK_XH {
                get {
                    try {
                        return ((int)(this[this.tableCMIMET.AL_AK_XHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AL_AK_XH\' in table \'CMIMET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCMIMET.AL_AK_XHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_FILLIMI {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCMIMET.DATE_FILLIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE_FILLIMI\' in table \'CMIMET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCMIMET.DATE_FILLIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE_MBARIMI {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCMIMET.DATE_MBARIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE_MBARIMI\' in table \'CMIMET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCMIMET.DATE_MBARIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMIMINull() {
                return this.IsNull(this.tableCMIMET.CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMIMINull() {
                this[this.tableCMIMET.CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORINull() {
                return this.IsNull(this.tableCMIMET.ID_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORINull() {
                this[this.tableCMIMET.ID_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAL_AK_XHNull() {
                return this.IsNull(this.tableCMIMET.AL_AK_XHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAL_AK_XHNull() {
                this[this.tableCMIMET.AL_AK_XHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_FILLIMINull() {
                return this.IsNull(this.tableCMIMET.DATE_FILLIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_FILLIMINull() {
                this[this.tableCMIMET.DATE_FILLIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_MBARIMINull() {
                return this.IsNull(this.tableCMIMET.DATE_MBARIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_MBARIMINull() {
                this[this.tableCMIMET.DATE_MBARIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow[] GetAKSESORERows() {
                return ((AKSESORERow[])(base.GetChildRows(this.Table.ChildRelations["CMIMET_AKSESORE"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AKSESORERowChangeEvent : System.EventArgs {
            
            private AKSESORERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERowChangeEvent(AKSESORERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ALUMINRowChangeEvent : System.EventArgs {
            
            private ALUMINRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRowChangeEvent(ALUMINRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALUMINRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class XHAMRowChangeEvent : System.EventArgs {
            
            private XHAMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRowChangeEvent(XHAMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public XHAMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CMIMETRowChangeEvent : System.EventArgs {
            
            private CMIMETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRowChangeEvent(CMIMETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CMIMETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PespaSistem.DsAksesoreTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AKSESORETableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AKSESORETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AKSESORE";
            tableMapping.ColumnMappings.Add("ID_AKSESORI", "ID_AKSESORI");
            tableMapping.ColumnMappings.Add("KOD_AKSESORI", "KOD_AKSESORI");
            tableMapping.ColumnMappings.Add("EMER_AKSESORI", "EMER_AKSESORI");
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("ID_ALUMINI", "ID_ALUMINI");
            tableMapping.ColumnMappings.Add("NJESIA_MATESE", "NJESIA_MATESE");
            tableMapping.ColumnMappings.Add("ID_XHAMI", "ID_XHAMI");
            tableMapping.ColumnMappings.Add("VARESIA", "VARESIA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `AKSESORE` WHERE ((`ID_AKSESORI` = ?) AND ((? = 1 AND `KOD_AKSESORI` IS NULL) OR (`KOD_AKSESORI` = ?)) AND ((? = 1 AND `EMER_AKSESORI` IS NULL) OR (`EMER_AKSESORI` = ?)) AND ((? = 1 AND `ID_CMIMI` IS NULL) OR (`ID_CMIMI` = ?)) AND ((? = 1 AND `ID_ALUMINI` IS NULL) OR (`ID_ALUMINI` = ?)) AND ((? = 1 AND `NJESIA_MATESE` IS NULL) OR (`NJESIA_MATESE` = ?)) AND ((? = 1 AND `ID_XHAMI` IS NULL) OR (`ID_XHAMI` = ?)) AND ((? = 1 AND `VARESIA` IS NULL) OR (`VARESIA` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_KOD_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_KOD_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_VARESIA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_VARESIA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `AKSESORE` (`KOD_AKSESORI`, `EMER_AKSESORI`, `ID_CMIMI`, `ID_ALUMINI`" +
                ", `NJESIA_MATESE`, `ID_XHAMI`, `VARESIA`) VALUES (?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("VARESIA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `AKSESORE` SET `KOD_AKSESORI` = ?, `EMER_AKSESORI` = ?, `ID_CMIMI` = ?, `ID_ALUMINI` = ?, `NJESIA_MATESE` = ?, `ID_XHAMI` = ?, `VARESIA` = ? WHERE ((`ID_AKSESORI` = ?) AND ((? = 1 AND `KOD_AKSESORI` IS NULL) OR (`KOD_AKSESORI` = ?)) AND ((? = 1 AND `EMER_AKSESORI` IS NULL) OR (`EMER_AKSESORI` = ?)) AND ((? = 1 AND `ID_CMIMI` IS NULL) OR (`ID_CMIMI` = ?)) AND ((? = 1 AND `ID_ALUMINI` IS NULL) OR (`ID_ALUMINI` = ?)) AND ((? = 1 AND `NJESIA_MATESE` IS NULL) OR (`NJESIA_MATESE` = ?)) AND ((? = 1 AND `ID_XHAMI` IS NULL) OR (`ID_XHAMI` = ?)) AND ((? = 1 AND `VARESIA` IS NULL) OR (`VARESIA` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("VARESIA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_KOD_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_KOD_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_VARESIA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_VARESIA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[12];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_AKSESORI, KOD_AKSESORI, EMER_AKSESORI, ID_CMIMI, ID_ALUMINI, NJESIA_MAT" +
                "ESE, ID_XHAMI, VARESIA FROM AKSESORE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM AKSESORE\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     AKSESORE.ID_AKSESORI, AKSESORE.KOD_AKSESORI, AKSESORE.EMER_AKSESORI, CMIMET.CMIMI, AKSESORE.ID_ALUMINI, 
                      AKSESORE.NJESIA_MATESE, AKSESORE.ID_XHAMI, AKSESORE.VARESIA
FROM         (AKSESORE INNER JOIN
                      CMIMET ON AKSESORE.ID_CMIMI = CMIMET.ID_CMIMI)
WHERE     (AKSESORE.ID_AKSESORI = ?)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     ALUMIN.ID_ALUMINI, ALUMIN.KOD_ALUMINI\r\nFROM         (AKSESORE INNER JO" +
                "IN\r\n                      ALUMIN ON AKSESORE.ID_ALUMINI = ALUMIN.ID_ALUMINI)\r\nWH" +
                "ERE     (AKSESORE.ID_AKSESORI = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     XHAM.ID_XHAMI, XHAM.KOD_XHAMI\r\nFROM         (AKSESORE INNER JOIN\r\n    " +
                "                  XHAM ON AKSESORE.ID_XHAMI = XHAM.ID_XHAMI)\r\nWHERE     (AKSESOR" +
                "E.ID_AKSESORI = ?)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "INSERT INTO AKSESORE\r\n                      (KOD_AKSESORI, EMER_AKSESORI, ID_CMIM" +
                "I, ID_ALUMINI, NJESIA_MATESE, ID_XHAMI, VARESIA)\r\nVALUES     (?, ?, ?, ?, ?, ?, " +
                "?)";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("VARESIA", System.Data.OleDb.OleDbType.WChar, 10, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARESIA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT     ALUMIN.KOD_ALUMINI\r\nFROM         (AKSESORE INNER JOIN\r\n               " +
                "       ALUMIN ON AKSESORE.ID_ALUMINI = ALUMIN.ID_ALUMINI)\r\nWHERE     (AKSESORE.I" +
                "D_AKSESORI = ?)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT    XHAM.KOD_XHAMI\r\nFROM         (AKSESORE INNER JOIN\r\n                    " +
                "  XHAM ON AKSESORE.ID_XHAMI = XHAM.ID_XHAMI)\r\nWHERE     (AKSESORE.ID_AKSESORI = " +
                "?)";
            this._commandCollection[7].CommandType = System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT     ID_CMIMI\r\nFROM         AKSESORE\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[8].CommandType = System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT     TOP 1 ID_AKSESORI\r\nFROM         AKSESORE\r\nORDER BY ID_AKSESORI DESC";
            this._commandCollection[9].CommandType = System.Data.CommandType.Text;
            this._commandCollection[10] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE    AKSESORE\r\nSET              KOD_AKSESORI = ?, EMER_AKSESORI = ?\r\nWHERE  " +
                "   (ID_AKSESORI = ?)";
            this._commandCollection[10].CommandType = System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[11] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "UPDATE    AKSESORE\r\nSET              ID_CMIMI = ?\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[11].CommandType = System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsAksesore.AKSESOREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsAksesore.AKSESOREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsAksesore.AKSESOREDataTable dataTable = new DsAksesore.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdAksesori(DsAksesore.AKSESOREDataTable dataTable, int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsAksesore.AKSESOREDataTable GetDataByIdAksesori(int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            DsAksesore.AKSESOREDataTable dataTable = new DsAksesore.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdAlumini(DsAksesore.AKSESOREDataTable dataTable, int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsAksesore.AKSESOREDataTable GetDataByIdAlumini(int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            DsAksesore.AKSESOREDataTable dataTable = new DsAksesore.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdXhami(DsAksesore.AKSESOREDataTable dataTable, int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsAksesore.AKSESOREDataTable GetDataByIdXhami(int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            DsAksesore.AKSESOREDataTable dataTable = new DsAksesore.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore.AKSESOREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore dataSet) {
            return this.Adapter.Update(dataSet, "AKSESORE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_AKSESORI, string Original_KOD_AKSESORI, string Original_EMER_AKSESORI, System.Nullable<int> Original_ID_CMIMI, System.Nullable<int> Original_ID_ALUMINI, System.Nullable<int> Original_NJESIA_MATESE, System.Nullable<int> Original_ID_XHAMI, string Original_VARESIA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_AKSESORI));
            if ((Original_KOD_AKSESORI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_KOD_AKSESORI));
            }
            if ((Original_EMER_AKSESORI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMER_AKSESORI));
            }
            if ((Original_ID_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_ID_ALUMINI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_ALUMINI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_NJESIA_MATESE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_ID_XHAMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ID_XHAMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_VARESIA == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_VARESIA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string KOD_AKSESORI, string EMER_AKSESORI, System.Nullable<int> ID_CMIMI, System.Nullable<int> ID_ALUMINI, System.Nullable<int> NJESIA_MATESE, System.Nullable<int> ID_XHAMI, string VARESIA) {
            if ((KOD_AKSESORI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KOD_AKSESORI));
            }
            if ((EMER_AKSESORI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMER_AKSESORI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_ALUMINI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_ALUMINI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ID_XHAMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_XHAMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((VARESIA == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(VARESIA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string KOD_AKSESORI, string EMER_AKSESORI, System.Nullable<int> ID_CMIMI, System.Nullable<int> ID_ALUMINI, System.Nullable<int> NJESIA_MATESE, System.Nullable<int> ID_XHAMI, string VARESIA, int Original_ID_AKSESORI, string Original_KOD_AKSESORI, string Original_EMER_AKSESORI, System.Nullable<int> Original_ID_CMIMI, System.Nullable<int> Original_ID_ALUMINI, System.Nullable<int> Original_NJESIA_MATESE, System.Nullable<int> Original_ID_XHAMI, string Original_VARESIA) {
            if ((KOD_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KOD_AKSESORI));
            }
            if ((EMER_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMER_AKSESORI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_ALUMINI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_ALUMINI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ID_XHAMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_XHAMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((VARESIA == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(VARESIA));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_AKSESORI));
            if ((Original_KOD_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_KOD_AKSESORI));
            }
            if ((Original_EMER_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_EMER_AKSESORI));
            }
            if ((Original_ID_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_ID_ALUMINI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ID_ALUMINI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_NJESIA_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_ID_XHAMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ID_XHAMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_VARESIA == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_VARESIA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQueryAksesore(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQueryAksesore(string KOD_AKSESORI, string EMER_AKSESORI, System.Nullable<int> ID_CMIMI, System.Nullable<int> ID_ALUMINI, System.Nullable<int> NJESIA_MATESE, System.Nullable<int> ID_XHAMI, string VARESIA) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[5];
            if ((KOD_AKSESORI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(KOD_AKSESORI));
            }
            if ((EMER_AKSESORI == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(EMER_AKSESORI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_ALUMINI.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID_ALUMINI.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                command.Parameters[4].Value = ((int)(NJESIA_MATESE.Value));
            }
            else {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ID_XHAMI.HasValue == true)) {
                command.Parameters[5].Value = ((int)(ID_XHAMI.Value));
            }
            else {
                command.Parameters[5].Value = System.DBNull.Value;
            }
            if ((VARESIA == null)) {
                command.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(VARESIA));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryAksesorAlumin(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[6];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryAksesorXham(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[7];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryIdCmimi(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[8];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryTopIdAksesori() {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[9];
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryAksesore(string KOD_AKSESORI, string EMER_AKSESORI, int Original_ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[10];
            if ((KOD_AKSESORI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(KOD_AKSESORI));
            }
            if ((EMER_AKSESORI == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(EMER_AKSESORI));
            }
            command.Parameters[2].Value = ((int)(Original_ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryIdCmimi(System.Nullable<int> ID_CMIMI, int Original_ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[11];
            if ((ID_CMIMI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ALUMINTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ALUMINTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ALUMIN";
            tableMapping.ColumnMappings.Add("ID_ALUMINI", "ID_ALUMINI");
            tableMapping.ColumnMappings.Add("KOD_ALUMINI", "KOD_ALUMINI");
            tableMapping.ColumnMappings.Add("EMER_ALUMINI", "EMER_ALUMINI");
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("PESHA_SPECIFIKE", "PESHA_SPECIFIKE");
            tableMapping.ColumnMappings.Add("NJESIA_MATESE", "NJESIA_MATESE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `ALUMIN` WHERE ((`ID_ALUMINI` = ?) AND ((? = 1 AND `KOD_ALUMINI` IS NULL) OR (`KOD_ALUMINI` = ?)) AND ((? = 1 AND `EMER_ALUMINI` IS NULL) OR (`EMER_ALUMINI` = ?)) AND ((? = 1 AND `ID_CMIMI` IS NULL) OR (`ID_CMIMI` = ?)) AND ((? = 1 AND `PESHA_SPECIFIKE` IS NULL) OR (`PESHA_SPECIFIKE` = ?)) AND ((? = 1 AND `NJESIA_MATESE` IS NULL) OR (`NJESIA_MATESE` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_KOD_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_KOD_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_PESHA_SPECIFIKE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PESHA_SPECIFIKE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_PESHA_SPECIFIKE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PESHA_SPECIFIKE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESIA_MATESE", System.Data.OleDb.OleDbType.SmallInt, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `ALUMIN` (`KOD_ALUMINI`, `EMER_ALUMINI`, `ID_CMIMI`, `PESHA_SPECIFIKE" +
                "`, `NJESIA_MATESE`) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("PESHA_SPECIFIKE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PESHA_SPECIFIKE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.SmallInt, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `ALUMIN` SET `KOD_ALUMINI` = ?, `EMER_ALUMINI` = ?, `ID_CMIMI` = ?, `PESHA_SPECIFIKE` = ?, `NJESIA_MATESE` = ? WHERE ((`ID_ALUMINI` = ?) AND ((? = 1 AND `KOD_ALUMINI` IS NULL) OR (`KOD_ALUMINI` = ?)) AND ((? = 1 AND `EMER_ALUMINI` IS NULL) OR (`EMER_ALUMINI` = ?)) AND ((? = 1 AND `ID_CMIMI` IS NULL) OR (`ID_CMIMI` = ?)) AND ((? = 1 AND `PESHA_SPECIFIKE` IS NULL) OR (`PESHA_SPECIFIKE` = ?)) AND ((? = 1 AND `NJESIA_MATESE` IS NULL) OR (`NJESIA_MATESE` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("PESHA_SPECIFIKE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PESHA_SPECIFIKE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.SmallInt, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_KOD_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_KOD_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_ALUMINI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_PESHA_SPECIFIKE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PESHA_SPECIFIKE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_PESHA_SPECIFIKE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PESHA_SPECIFIKE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESIA_MATESE", System.Data.OleDb.OleDbType.SmallInt, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[2];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ALUMINI, KOD_ALUMINI, EMER_ALUMINI, ID_CMIMI, PESHA_SPECIFIKE, NJESIA_M" +
                "ATESE FROM ALUMIN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     ALUMIN.ID_ALUMINI, ALUMIN.KOD_ALUMINI, ALUMIN.EMER_ALUMINI, CMIMET.CMIMI, ALUMIN.PESHA_SPECIFIKE, ALUMIN.NJESIA_MATESE
FROM         (ALUMIN INNER JOIN
                      CMIMET ON ALUMIN.ID_CMIMI = CMIMET.ID_CMIMI)
WHERE     (ALUMIN.ID_ALUMINI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_ALUMINI", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsAksesore.ALUMINDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsAksesore.ALUMINDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsAksesore.ALUMINDataTable dataTable = new DsAksesore.ALUMINDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdAlumini(DsAksesore.ALUMINDataTable dataTable, int ID_ALUMINI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_ALUMINI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsAksesore.ALUMINDataTable GetDataByIdAlumini(int ID_ALUMINI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_ALUMINI));
            DsAksesore.ALUMINDataTable dataTable = new DsAksesore.ALUMINDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore.ALUMINDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore dataSet) {
            return this.Adapter.Update(dataSet, "ALUMIN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_ALUMINI, string Original_KOD_ALUMINI, string Original_EMER_ALUMINI, System.Nullable<int> Original_ID_CMIMI, System.Nullable<double> Original_PESHA_SPECIFIKE, System.Nullable<short> Original_NJESIA_MATESE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_ALUMINI));
            if ((Original_KOD_ALUMINI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_KOD_ALUMINI));
            }
            if ((Original_EMER_ALUMINI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMER_ALUMINI));
            }
            if ((Original_ID_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_PESHA_SPECIFIKE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_PESHA_SPECIFIKE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_NJESIA_MATESE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string KOD_ALUMINI, string EMER_ALUMINI, System.Nullable<int> ID_CMIMI, System.Nullable<double> PESHA_SPECIFIKE, System.Nullable<short> NJESIA_MATESE) {
            if ((KOD_ALUMINI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KOD_ALUMINI));
            }
            if ((EMER_ALUMINI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMER_ALUMINI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((PESHA_SPECIFIKE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(PESHA_SPECIFIKE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string KOD_ALUMINI, string EMER_ALUMINI, System.Nullable<int> ID_CMIMI, System.Nullable<double> PESHA_SPECIFIKE, System.Nullable<short> NJESIA_MATESE, int Original_ID_ALUMINI, string Original_KOD_ALUMINI, string Original_EMER_ALUMINI, System.Nullable<int> Original_ID_CMIMI, System.Nullable<double> Original_PESHA_SPECIFIKE, System.Nullable<short> Original_NJESIA_MATESE) {
            if ((KOD_ALUMINI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KOD_ALUMINI));
            }
            if ((EMER_ALUMINI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMER_ALUMINI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((PESHA_SPECIFIKE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(PESHA_SPECIFIKE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_ALUMINI));
            if ((Original_KOD_ALUMINI == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_KOD_ALUMINI));
            }
            if ((Original_EMER_ALUMINI == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_EMER_ALUMINI));
            }
            if ((Original_ID_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_PESHA_SPECIFIKE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_PESHA_SPECIFIKE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_NJESIA_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(Original_NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class XHAMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public XHAMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "XHAM";
            tableMapping.ColumnMappings.Add("ID_XHAMI", "ID_XHAMI");
            tableMapping.ColumnMappings.Add("KOD_XHAMI", "KOD_XHAMI");
            tableMapping.ColumnMappings.Add("EMER_XHAMI", "EMER_XHAMI");
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("NJESIA_MATESE", "NJESIA_MATESE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `XHAM` WHERE ((`ID_XHAMI` = ?) AND ((? = 1 AND `KOD_XHAMI` IS NULL) OR (`KOD_XHAMI` = ?)) AND ((? = 1 AND `EMER_XHAMI` IS NULL) OR (`EMER_XHAMI` = ?)) AND ((? = 1 AND `ID_CMIMI` IS NULL) OR (`ID_CMIMI` = ?)) AND ((? = 1 AND `NJESIA_MATESE` IS NULL) OR (`NJESIA_MATESE` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_KOD_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_KOD_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `XHAM` (`KOD_XHAMI`, `EMER_XHAMI`, `ID_CMIMI`, `NJESIA_MATESE`) VALUE" +
                "S (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `XHAM` SET `KOD_XHAMI` = ?, `EMER_XHAMI` = ?, `ID_CMIMI` = ?, `NJESIA_MATESE` = ? WHERE ((`ID_XHAMI` = ?) AND ((? = 1 AND `KOD_XHAMI` IS NULL) OR (`KOD_XHAMI` = ?)) AND ((? = 1 AND `EMER_XHAMI` IS NULL) OR (`EMER_XHAMI` = ?)) AND ((? = 1 AND `ID_CMIMI` IS NULL) OR (`ID_CMIMI` = ?)) AND ((? = 1 AND `NJESIA_MATESE` IS NULL) OR (`NJESIA_MATESE` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KOD_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_KOD_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_KOD_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KOD_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_XHAMI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESIA_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESIA_MATESE", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[2];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_XHAMI, KOD_XHAMI, EMER_XHAMI, ID_CMIMI, NJESIA_MATESE FROM XHAM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     XHAM.ID_XHAMI, XHAM.KOD_XHAMI, XHAM.EMER_XHAMI, CMIMET.CMIMI, XHAM.NJE" +
                "SIA_MATESE\r\nFROM         (XHAM INNER JOIN\r\n                      CMIMET ON XHAM." +
                "ID_CMIMI = CMIMET.ID_CMIMI)\r\nWHERE     (XHAM.ID_XHAMI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_XHAMI", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsAksesore.XHAMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsAksesore.XHAMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsAksesore.XHAMDataTable dataTable = new DsAksesore.XHAMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdXhami(DsAksesore.XHAMDataTable dataTable, int ID_XHAMI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_XHAMI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsAksesore.XHAMDataTable GetDataByIdXhami(int ID_XHAMI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_XHAMI));
            DsAksesore.XHAMDataTable dataTable = new DsAksesore.XHAMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore.XHAMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore dataSet) {
            return this.Adapter.Update(dataSet, "XHAM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_XHAMI, string Original_KOD_XHAMI, string Original_EMER_XHAMI, System.Nullable<int> Original_ID_CMIMI, System.Nullable<int> Original_NJESIA_MATESE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_XHAMI));
            if ((Original_KOD_XHAMI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_KOD_XHAMI));
            }
            if ((Original_EMER_XHAMI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMER_XHAMI));
            }
            if ((Original_ID_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_NJESIA_MATESE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string KOD_XHAMI, string EMER_XHAMI, System.Nullable<int> ID_CMIMI, System.Nullable<int> NJESIA_MATESE) {
            if ((KOD_XHAMI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KOD_XHAMI));
            }
            if ((EMER_XHAMI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMER_XHAMI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string KOD_XHAMI, string EMER_XHAMI, System.Nullable<int> ID_CMIMI, System.Nullable<int> NJESIA_MATESE, int Original_ID_XHAMI, string Original_KOD_XHAMI, string Original_EMER_XHAMI, System.Nullable<int> Original_ID_CMIMI, System.Nullable<int> Original_NJESIA_MATESE) {
            if ((KOD_XHAMI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KOD_XHAMI));
            }
            if ((EMER_XHAMI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMER_XHAMI));
            }
            if ((ID_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((NJESIA_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_XHAMI));
            if ((Original_KOD_XHAMI == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_KOD_XHAMI));
            }
            if ((Original_EMER_XHAMI == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_EMER_XHAMI));
            }
            if ((Original_ID_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_NJESIA_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_NJESIA_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CMIMETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CMIMETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CMIMET";
            tableMapping.ColumnMappings.Add("ID_CMIMI", "ID_CMIMI");
            tableMapping.ColumnMappings.Add("CMIMI", "CMIMI");
            tableMapping.ColumnMappings.Add("ID_AKSESORI", "ID_AKSESORI");
            tableMapping.ColumnMappings.Add("AL_AK_XH", "AL_AK_XH");
            tableMapping.ColumnMappings.Add("DATE_FILLIMI", "DATE_FILLIMI");
            tableMapping.ColumnMappings.Add("DATE_MBARIMI", "DATE_MBARIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `CMIMET` WHERE ((`ID_CMIMI` = ?) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)) AND ((? = 1 AND `ID_AKSESORI` IS NULL) OR (`ID_AKSESORI` = ?)) AND ((? = 1 AND `AL_AK_XH` IS NULL) OR (`AL_AK_XH` = ?)) AND ((? = 1 AND `DATE_FILLIMI` IS NULL) OR (`DATE_FILLIMI` = ?)) AND ((? = 1 AND `DATE_MBARIMI` IS NULL) OR (`DATE_MBARIMI` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_DATE_FILLIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_DATE_FILLIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_DATE_MBARIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_DATE_MBARIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `CMIMET` (`CMIMI`, `ID_AKSESORI`, `AL_AK_XH`, `DATE_FILLIMI`, `DATE_M" +
                "BARIMI`) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_FILLIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_MBARIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `CMIMET` SET `CMIMI` = ?, `ID_AKSESORI` = ?, `AL_AK_XH` = ?, `DATE_FILLIMI` = ?, `DATE_MBARIMI` = ? WHERE ((`ID_CMIMI` = ?) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)) AND ((? = 1 AND `ID_AKSESORI` IS NULL) OR (`ID_AKSESORI` = ?)) AND ((? = 1 AND `AL_AK_XH` IS NULL) OR (`AL_AK_XH` = ?)) AND ((? = 1 AND `DATE_FILLIMI` IS NULL) OR (`DATE_FILLIMI` = ?)) AND ((? = 1 AND `DATE_MBARIMI` IS NULL) OR (`DATE_MBARIMI` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_FILLIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_MBARIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_DATE_FILLIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_DATE_FILLIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_DATE_MBARIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_DATE_MBARIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[7];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CMIMI, CMIMI, ID_AKSESORI, AL_AK_XH, DATE_FILLIMI, DATE_MBARIMI FROM CM" +
                "IMET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ID_CMIMI, CMIMI, ID_AKSESORI, AL_AK_XH, DATE_FILLIMI, DATE_MBARIMI\r\nFR" +
                "OM         CMIMET\r\nWHERE     (ID_CMIMI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO CMIMET\r\n                      (CMIMI, ID_AKSESORI, AL_AK_XH, DATE_FIL" +
                "LIMI, DATE_MBARIMI)\r\nVALUES     (?, ?, ?, ?, ?)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("AL_AK_XH", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AL_AK_XH", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_FILLIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_FILLIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_MBARIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     DATE_FILLIMI\r\nFROM         CMIMET\r\nWHERE     (ID_CMIMI = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     TOP 1 ID_CMIMI\r\nFROM         CMIMET\r\nORDER BY ID_CMIMI DESC";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE    CMIMET\r\nSET              CMIMI = ?\r\nWHERE     (ID_CMIMI = ?)";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[6] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "UPDATE    CMIMET\r\nSET              DATE_MBARIMI = ?\r\nWHERE     (ID_CMIMI = ?)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATE_MBARIMI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATE_MBARIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_CMIMI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsAksesore.CMIMETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsAksesore.CMIMETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsAksesore.CMIMETDataTable dataTable = new DsAksesore.CMIMETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdCmimi(DsAksesore.CMIMETDataTable dataTable, int ID_CMIMI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_CMIMI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsAksesore.CMIMETDataTable GetDataByIdCmimi(int ID_CMIMI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_CMIMI));
            DsAksesore.CMIMETDataTable dataTable = new DsAksesore.CMIMETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore.CMIMETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsAksesore dataSet) {
            return this.Adapter.Update(dataSet, "CMIMET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_CMIMI, System.Nullable<decimal> Original_CMIMI, System.Nullable<int> Original_ID_AKSESORI, System.Nullable<int> Original_AL_AK_XH, System.Nullable<System.DateTime> Original_DATE_FILLIMI, System.Nullable<System.DateTime> Original_DATE_MBARIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_CMIMI));
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_AKSESORI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_AL_AK_XH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_AL_AK_XH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_DATE_FILLIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_DATE_FILLIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_DATE_MBARIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<decimal> CMIMI, System.Nullable<int> ID_AKSESORI, System.Nullable<int> AL_AK_XH, System.Nullable<System.DateTime> DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI) {
            if ((CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_AKSESORI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((AL_AK_XH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(AL_AK_XH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DATE_FILLIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATE_FILLIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DATE_MBARIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<decimal> CMIMI, System.Nullable<int> ID_AKSESORI, System.Nullable<int> AL_AK_XH, System.Nullable<System.DateTime> DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI, int Original_ID_CMIMI, System.Nullable<decimal> Original_CMIMI, System.Nullable<int> Original_ID_AKSESORI, System.Nullable<int> Original_AL_AK_XH, System.Nullable<System.DateTime> Original_DATE_FILLIMI, System.Nullable<System.DateTime> Original_DATE_MBARIMI) {
            if ((CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_AKSESORI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((AL_AK_XH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(AL_AK_XH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DATE_FILLIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATE_FILLIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DATE_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_CMIMI));
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_AKSESORI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_AL_AK_XH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_AL_AK_XH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_DATE_FILLIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_DATE_FILLIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_DATE_MBARIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_DATE_MBARIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(System.Nullable<decimal> CMIMI, System.Nullable<int> ID_AKSESORI, System.Nullable<int> AL_AK_XH, System.Nullable<System.DateTime> DATE_FILLIMI, System.Nullable<System.DateTime> DATE_MBARIMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[2];
            if ((CMIMI.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(CMIMI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_AKSESORI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            if ((AL_AK_XH.HasValue == true)) {
                command.Parameters[2].Value = ((int)(AL_AK_XH.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DATE_FILLIMI.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(DATE_FILLIMI.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DATE_MBARIMI.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<System.DateTime> ScalarQueryDateFillimi(int ID_CMIMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(ID_CMIMI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<System.DateTime>();
            }
            else {
                return new System.Nullable<System.DateTime>(((System.DateTime)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryTopIdCmimi() {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[4];
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(System.Nullable<decimal> CMIMI, int Original_ID_CMIMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[5];
            if ((CMIMI.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(CMIMI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_ID_CMIMI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryDateMbarimi(System.Nullable<System.DateTime> DATE_MBARIMI, int Original_ID_CMIMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[6];
            if ((DATE_MBARIMI.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DATE_MBARIMI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_ID_CMIMI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591