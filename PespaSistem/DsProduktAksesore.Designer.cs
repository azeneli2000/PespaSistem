//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PespaSistem {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DsProduktAksesore")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsProduktAksesore : System.Data.DataSet {
        
        private PRODUKT_AKSESOREDataTable tablePRODUKT_AKSESORE;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsProduktAksesore() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsProduktAksesore(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["PRODUKT_AKSESORE"] != null)) {
                    base.Tables.Add(new PRODUKT_AKSESOREDataTable(ds.Tables["PRODUKT_AKSESORE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODUKT_AKSESOREDataTable PRODUKT_AKSESORE {
            get {
                return this.tablePRODUKT_AKSESORE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DsProduktAksesore cln = ((DsProduktAksesore)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PRODUKT_AKSESORE"] != null)) {
                    base.Tables.Add(new PRODUKT_AKSESOREDataTable(ds.Tables["PRODUKT_AKSESORE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePRODUKT_AKSESORE = ((PRODUKT_AKSESOREDataTable)(base.Tables["PRODUKT_AKSESORE"]));
            if ((initTable == true)) {
                if ((this.tablePRODUKT_AKSESORE != null)) {
                    this.tablePRODUKT_AKSESORE.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsProduktAksesore";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsProduktAksesore.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePRODUKT_AKSESORE = new PRODUKT_AKSESOREDataTable();
            base.Tables.Add(this.tablePRODUKT_AKSESORE);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePRODUKT_AKSESORE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DsProduktAksesore ds = new DsProduktAksesore();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void PRODUKT_AKSESORERowChangeEventHandler(object sender, PRODUKT_AKSESORERowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODUKT_AKSESOREDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_PRODUKT_AKSESORE;
            
            private System.Data.DataColumn columnID_PRODUKTI;
            
            private System.Data.DataColumn columnID_AKSESORE_ALUMINI;
            
            private System.Data.DataColumn columnID_AKSESORE_XHAMI;
            
            private System.Data.DataColumn columnID_AKSESORE;
            
            private System.Data.DataColumn columnFORMULA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESOREDataTable() {
                this.TableName = "PRODUKT_AKSESORE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODUKT_AKSESOREDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PRODUKT_AKSESOREDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PRODUKT_AKSESOREColumn {
                get {
                    return this.columnID_PRODUKT_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PRODUKTIColumn {
                get {
                    return this.columnID_PRODUKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORE_ALUMINIColumn {
                get {
                    return this.columnID_AKSESORE_ALUMINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORE_XHAMIColumn {
                get {
                    return this.columnID_AKSESORE_XHAMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESOREColumn {
                get {
                    return this.columnID_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FORMULAColumn {
                get {
                    return this.columnFORMULA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESORERow this[int index] {
                get {
                    return ((PRODUKT_AKSESORERow)(this.Rows[index]));
                }
            }
            
            public event PRODUKT_AKSESORERowChangeEventHandler PRODUKT_AKSESORERowChanging;
            
            public event PRODUKT_AKSESORERowChangeEventHandler PRODUKT_AKSESORERowChanged;
            
            public event PRODUKT_AKSESORERowChangeEventHandler PRODUKT_AKSESORERowDeleting;
            
            public event PRODUKT_AKSESORERowChangeEventHandler PRODUKT_AKSESORERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPRODUKT_AKSESORERow(PRODUKT_AKSESORERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESORERow AddPRODUKT_AKSESORERow(int ID_PRODUKTI, int ID_AKSESORE_ALUMINI, int ID_AKSESORE_XHAMI, int ID_AKSESORE, string FORMULA) {
                PRODUKT_AKSESORERow rowPRODUKT_AKSESORERow = ((PRODUKT_AKSESORERow)(this.NewRow()));
                rowPRODUKT_AKSESORERow.ItemArray = new object[] {
                        null,
                        ID_PRODUKTI,
                        ID_AKSESORE_ALUMINI,
                        ID_AKSESORE_XHAMI,
                        ID_AKSESORE,
                        FORMULA};
                this.Rows.Add(rowPRODUKT_AKSESORERow);
                return rowPRODUKT_AKSESORERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESORERow FindByID_PRODUKT_AKSESORE(int ID_PRODUKT_AKSESORE) {
                return ((PRODUKT_AKSESORERow)(this.Rows.Find(new object[] {
                            ID_PRODUKT_AKSESORE})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PRODUKT_AKSESOREDataTable cln = ((PRODUKT_AKSESOREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PRODUKT_AKSESOREDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_PRODUKT_AKSESORE = base.Columns["ID_PRODUKT_AKSESORE"];
                this.columnID_PRODUKTI = base.Columns["ID_PRODUKTI"];
                this.columnID_AKSESORE_ALUMINI = base.Columns["ID_AKSESORE_ALUMINI"];
                this.columnID_AKSESORE_XHAMI = base.Columns["ID_AKSESORE_XHAMI"];
                this.columnID_AKSESORE = base.Columns["ID_AKSESORE"];
                this.columnFORMULA = base.Columns["FORMULA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_PRODUKT_AKSESORE = new System.Data.DataColumn("ID_PRODUKT_AKSESORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUKT_AKSESORE);
                this.columnID_PRODUKTI = new System.Data.DataColumn("ID_PRODUKTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUKTI);
                this.columnID_AKSESORE_ALUMINI = new System.Data.DataColumn("ID_AKSESORE_ALUMINI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE_ALUMINI);
                this.columnID_AKSESORE_XHAMI = new System.Data.DataColumn("ID_AKSESORE_XHAMI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE_XHAMI);
                this.columnID_AKSESORE = new System.Data.DataColumn("ID_AKSESORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE);
                this.columnFORMULA = new System.Data.DataColumn("FORMULA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMULA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_PRODUKT_AKSESORE}, true));
                this.columnID_PRODUKT_AKSESORE.AutoIncrement = true;
                this.columnID_PRODUKT_AKSESORE.AllowDBNull = false;
                this.columnID_PRODUKT_AKSESORE.Unique = true;
                this.columnFORMULA.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESORERow NewPRODUKT_AKSESORERow() {
                return ((PRODUKT_AKSESORERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PRODUKT_AKSESORERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PRODUKT_AKSESORERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODUKT_AKSESORERowChanged != null)) {
                    this.PRODUKT_AKSESORERowChanged(this, new PRODUKT_AKSESORERowChangeEvent(((PRODUKT_AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODUKT_AKSESORERowChanging != null)) {
                    this.PRODUKT_AKSESORERowChanging(this, new PRODUKT_AKSESORERowChangeEvent(((PRODUKT_AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODUKT_AKSESORERowDeleted != null)) {
                    this.PRODUKT_AKSESORERowDeleted(this, new PRODUKT_AKSESORERowChangeEvent(((PRODUKT_AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODUKT_AKSESORERowDeleting != null)) {
                    this.PRODUKT_AKSESORERowDeleting(this, new PRODUKT_AKSESORERowChangeEvent(((PRODUKT_AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePRODUKT_AKSESORERow(PRODUKT_AKSESORERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsProduktAksesore ds = new DsProduktAksesore();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODUKT_AKSESOREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PRODUKT_AKSESORERow : System.Data.DataRow {
            
            private PRODUKT_AKSESOREDataTable tablePRODUKT_AKSESORE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PRODUKT_AKSESORERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODUKT_AKSESORE = ((PRODUKT_AKSESOREDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PRODUKT_AKSESORE {
                get {
                    return ((int)(this[this.tablePRODUKT_AKSESORE.ID_PRODUKT_AKSESOREColumn]));
                }
                set {
                    this[this.tablePRODUKT_AKSESORE.ID_PRODUKT_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PRODUKTI {
                get {
                    try {
                        return ((int)(this[this.tablePRODUKT_AKSESORE.ID_PRODUKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PRODUKTI\' in table \'PRODUKT_AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKT_AKSESORE.ID_PRODUKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE_ALUMINI {
                get {
                    try {
                        return ((int)(this[this.tablePRODUKT_AKSESORE.ID_AKSESORE_ALUMINIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE_ALUMINI\' in table \'PRODUKT_AKSESORE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePRODUKT_AKSESORE.ID_AKSESORE_ALUMINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE_XHAMI {
                get {
                    try {
                        return ((int)(this[this.tablePRODUKT_AKSESORE.ID_AKSESORE_XHAMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE_XHAMI\' in table \'PRODUKT_AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKT_AKSESORE.ID_AKSESORE_XHAMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE {
                get {
                    try {
                        return ((int)(this[this.tablePRODUKT_AKSESORE.ID_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE\' in table \'PRODUKT_AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKT_AKSESORE.ID_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FORMULA {
                get {
                    try {
                        return ((string)(this[this.tablePRODUKT_AKSESORE.FORMULAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FORMULA\' in table \'PRODUKT_AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUKT_AKSESORE.FORMULAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PRODUKTINull() {
                return this.IsNull(this.tablePRODUKT_AKSESORE.ID_PRODUKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PRODUKTINull() {
                this[this.tablePRODUKT_AKSESORE.ID_PRODUKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORE_ALUMININull() {
                return this.IsNull(this.tablePRODUKT_AKSESORE.ID_AKSESORE_ALUMINIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORE_ALUMININull() {
                this[this.tablePRODUKT_AKSESORE.ID_AKSESORE_ALUMINIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORE_XHAMINull() {
                return this.IsNull(this.tablePRODUKT_AKSESORE.ID_AKSESORE_XHAMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORE_XHAMINull() {
                this[this.tablePRODUKT_AKSESORE.ID_AKSESORE_XHAMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORENull() {
                return this.IsNull(this.tablePRODUKT_AKSESORE.ID_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORENull() {
                this[this.tablePRODUKT_AKSESORE.ID_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFORMULANull() {
                return this.IsNull(this.tablePRODUKT_AKSESORE.FORMULAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFORMULANull() {
                this[this.tablePRODUKT_AKSESORE.FORMULAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PRODUKT_AKSESORERowChangeEvent : System.EventArgs {
            
            private PRODUKT_AKSESORERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESORERowChangeEvent(PRODUKT_AKSESORERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PRODUKT_AKSESORERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PespaSistem.DsProduktAksesoreTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRODUKT_AKSESORETableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PRODUKT_AKSESORETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRODUKT_AKSESORE";
            tableMapping.ColumnMappings.Add("ID_PRODUKT_AKSESORE", "ID_PRODUKT_AKSESORE");
            tableMapping.ColumnMappings.Add("ID_PRODUKTI", "ID_PRODUKTI");
            tableMapping.ColumnMappings.Add("ID_AKSESORE_ALUMINI", "ID_AKSESORE_ALUMINI");
            tableMapping.ColumnMappings.Add("ID_AKSESORE_XHAMI", "ID_AKSESORE_XHAMI");
            tableMapping.ColumnMappings.Add("ID_AKSESORE", "ID_AKSESORE");
            tableMapping.ColumnMappings.Add("FORMULA", "FORMULA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `PRODUKT_AKSESORE` WHERE ((`ID_PRODUKT_AKSESORE` = ?) AND ((? = 1 AND `ID_PRODUKTI` IS NULL) OR (`ID_PRODUKTI` = ?)) AND ((? = 1 AND `ID_AKSESORE_ALUMINI` IS NULL) OR (`ID_AKSESORE_ALUMINI` = ?)) AND ((? = 1 AND `ID_AKSESORE_XHAMI` IS NULL) OR (`ID_AKSESORE_XHAMI` = ?)) AND ((? = 1 AND `ID_AKSESORE` IS NULL) OR (`ID_AKSESORE` = ?)) AND ((? = 1 AND `FORMULA` IS NULL) OR (`FORMULA` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKT_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKT_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_FORMULA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PRODUKT_AKSESORE` (`ID_PRODUKTI`, `ID_AKSESORE_ALUMINI`, `ID_AKSESOR" +
                "E_XHAMI`, `ID_AKSESORE`, `FORMULA`) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PRODUKT_AKSESORE` SET `ID_PRODUKTI` = ?, `ID_AKSESORE_ALUMINI` = ?, `ID_AKSESORE_XHAMI` = ?, `ID_AKSESORE` = ?, `FORMULA` = ? WHERE ((`ID_PRODUKT_AKSESORE` = ?) AND ((? = 1 AND `ID_PRODUKTI` IS NULL) OR (`ID_PRODUKTI` = ?)) AND ((? = 1 AND `ID_AKSESORE_ALUMINI` IS NULL) OR (`ID_AKSESORE_ALUMINI` = ?)) AND ((? = 1 AND `ID_AKSESORE_XHAMI` IS NULL) OR (`ID_AKSESORE_XHAMI` = ?)) AND ((? = 1 AND `ID_AKSESORE` IS NULL) OR (`ID_AKSESORE` = ?)) AND ((? = 1 AND `FORMULA` IS NULL) OR (`FORMULA` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKT_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKT_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_FORMULA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaSistem.Properties.Settings.Default.PespaSistemConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[11];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PRODUKT_AKSESORE, ID_PRODUKTI, ID_AKSESORE_ALUMINI, ID_AKSESORE_XHAMI, " +
                "ID_AKSESORE, FORMULA FROM PRODUKT_AKSESORE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ID_PRODUKT_AKSESORE, ID_PRODUKTI, ID_AKSESORE_ALUMINI, ID_AKSESORE_XHA" +
                "MI, ID_AKSESORE, FORMULA\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_PRODUKTI " +
                "= ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO `PRODUKT_AKSESORE` (`ID_PRODUKTI`, `ID_AKSESORE_ALUMINI`, `ID_AKSESOR" +
                "E_XHAMI`, `ID_AKSESORE`, `FORMULA`) VALUES (?, ?, ?, ?, ?)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     ID_PRODUKT_AKSESORE\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_AKSE" +
                "SORE = ?) AND (ID_PRODUKTI = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     ID_PRODUKT_AKSESORE\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_PROD" +
                "UKTI = ?) AND (ID_AKSESORE_ALUMINI = ?)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT     FORMULA\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_PRODUKT_AKSESORE" +
                " = ?)";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKT_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKT_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT     FORMULA\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_AKSESORE_ALUMINI" +
                " = ?)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT     FORMULA\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_PRODUKTI = ?)";
            this._commandCollection[7].CommandType = System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT     ID_PRODUKT_AKSESORE\r\nFROM         PRODUKT_AKSESORE\r\nWHERE     (ID_PROD" +
                "UKTI = ?) AND (ID_AKSESORE_XHAMI = ?)";
            this._commandCollection[8].CommandType = System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "UPDATE    PRODUKT_AKSESORE\r\nSET              ID_PRODUKTI = ?, ID_AKSESORE_ALUMINI" +
                " = ?, ID_AKSESORE_XHAMI = ?, ID_AKSESORE = ?, FORMULA = ?\r\nWHERE     (ID_PRODUKT" +
                "_AKSESORE = ?)";
            this._commandCollection[9].CommandType = System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PRODUKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_ALUMINI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_ALUMINI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE_XHAMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE_XHAMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKT_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKT_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[10] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE    PRODUKT_AKSESORE\r\nSET              FORMULA = ?\r\nWHERE     (ID_PRODUKT_A" +
                "KSESORE = ?)";
            this._commandCollection[10].CommandType = System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PRODUKT_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PRODUKT_AKSESORE", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsProduktAksesore.PRODUKT_AKSESOREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsProduktAksesore.PRODUKT_AKSESOREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsProduktAksesore.PRODUKT_AKSESOREDataTable dataTable = new DsProduktAksesore.PRODUKT_AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProdukti(DsProduktAksesore.PRODUKT_AKSESOREDataTable dataTable, System.Nullable<int> ID_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID_PRODUKTI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsProduktAksesore.PRODUKT_AKSESOREDataTable GetDataByIdProdukti(System.Nullable<int> ID_PRODUKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID_PRODUKTI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsProduktAksesore.PRODUKT_AKSESOREDataTable dataTable = new DsProduktAksesore.PRODUKT_AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsProduktAksesore.PRODUKT_AKSESOREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsProduktAksesore dataSet) {
            return this.Adapter.Update(dataSet, "PRODUKT_AKSESORE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PRODUKT_AKSESORE, System.Nullable<int> Original_ID_PRODUKTI, System.Nullable<int> Original_ID_AKSESORE_ALUMINI, System.Nullable<int> Original_ID_AKSESORE_XHAMI, System.Nullable<int> Original_ID_AKSESORE, string Original_FORMULA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PRODUKT_AKSESORE));
            if ((Original_ID_PRODUKTI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_PRODUKTI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE_ALUMINI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_AKSESORE_ALUMINI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE_XHAMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_AKSESORE_XHAMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_AKSESORE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_FORMULA == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FORMULA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> ID_PRODUKTI, System.Nullable<int> ID_AKSESORE_ALUMINI, System.Nullable<int> ID_AKSESORE_XHAMI, System.Nullable<int> ID_AKSESORE, string FORMULA) {
            if ((ID_PRODUKTI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_ALUMINI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_AKSESORE_ALUMINI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_XHAMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_AKSESORE_XHAMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FORMULA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> ID_PRODUKTI, System.Nullable<int> ID_AKSESORE_ALUMINI, System.Nullable<int> ID_AKSESORE_XHAMI, System.Nullable<int> ID_AKSESORE, string FORMULA, int Original_ID_PRODUKT_AKSESORE, System.Nullable<int> Original_ID_PRODUKTI, System.Nullable<int> Original_ID_AKSESORE_ALUMINI, System.Nullable<int> Original_ID_AKSESORE_XHAMI, System.Nullable<int> Original_ID_AKSESORE, string Original_FORMULA) {
            if ((ID_PRODUKTI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_ALUMINI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_AKSESORE_ALUMINI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_XHAMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_AKSESORE_XHAMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FORMULA));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_PRODUKT_AKSESORE));
            if ((Original_ID_PRODUKTI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_PRODUKTI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE_ALUMINI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_AKSESORE_ALUMINI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE_XHAMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_AKSESORE_XHAMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_AKSESORE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_FORMULA == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_FORMULA));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(System.Nullable<int> ID_PRODUKTI, System.Nullable<int> ID_AKSESORE_ALUMINI, System.Nullable<int> ID_AKSESORE_XHAMI, System.Nullable<int> ID_AKSESORE, string FORMULA) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[2];
            if ((ID_PRODUKTI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_ALUMINI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_AKSESORE_ALUMINI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_XHAMI.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_AKSESORE_XHAMI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FORMULA));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryByAksesoreProdukt(System.Nullable<int> ID_AKSESORE, System.Nullable<int> ID_PRODUKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[3];
            if ((ID_AKSESORE.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_PRODUKTI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryByAluminProdukt(System.Nullable<int> ID_PRODUKTI, System.Nullable<int> ID_AKSESORE_ALUMINI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[4];
            if ((ID_PRODUKTI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_ALUMINI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_AKSESORE_ALUMINI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryByFormula(int ID_PRODUKT_AKSESORE) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[5];
            command.Parameters[0].Value = ((int)(ID_PRODUKT_AKSESORE));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryByIdAlumini(System.Nullable<int> ID_AKSESORE_ALUMINI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[6];
            if ((ID_AKSESORE_ALUMINI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_AKSESORE_ALUMINI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryByIdProdukti(System.Nullable<int> ID_PRODUKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[7];
            if ((ID_PRODUKTI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryByXhamProdukt(System.Nullable<int> ID_PRODUKTI, System.Nullable<int> ID_AKSESORE_XHAMI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[8];
            if ((ID_PRODUKTI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_XHAMI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_AKSESORE_XHAMI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(System.Nullable<int> ID_PRODUKTI, System.Nullable<int> ID_AKSESORE_ALUMINI, System.Nullable<int> ID_AKSESORE_XHAMI, System.Nullable<int> ID_AKSESORE, string FORMULA, int Original_ID_PRODUKT_AKSESORE) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[9];
            if ((ID_PRODUKTI.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ID_PRODUKTI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_ALUMINI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_AKSESORE_ALUMINI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE_XHAMI.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_AKSESORE_XHAMI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FORMULA));
            }
            command.Parameters[5].Value = ((int)(Original_ID_PRODUKT_AKSESORE));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryFormula(string FORMULA, int Original_ID_PRODUKT_AKSESORE) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[10];
            if ((FORMULA == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FORMULA));
            }
            command.Parameters[1].Value = ((int)(Original_ID_PRODUKT_AKSESORE));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591